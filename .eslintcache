[{"C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\index.js":"1","C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\reportWebVitals.js":"2","C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\App.js":"3","C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\LandingPage.js":"4","C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\SearchResults.js":"5","C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\HeaderNav.js":"6","C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\Bookshelf.js":"7","C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\firebase.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1413,"mtime":1607463452416,"results":"12","hashOfConfig":"10"},{"size":346,"mtime":1607463468859,"results":"13","hashOfConfig":"10"},{"size":5053,"mtime":1607463751044,"results":"14","hashOfConfig":"10"},{"size":1667,"mtime":1607460202585,"results":"15","hashOfConfig":"10"},{"size":4283,"mtime":1607461529658,"results":"16","hashOfConfig":"10"},{"size":484,"mtime":1607448695522,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17yg1cu",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\index.js",[],["37","38"],"C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\reportWebVitals.js",[],"C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\App.js",[],"C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\LandingPage.js",[],"C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\SearchResults.js",["39"],"import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport noCover from './assets/noCover.jpg';\r\nimport firebase from './firebase.js';\r\n\r\nclass SearchResults extends Component {\r\n  constructor() {\r\n    super();\r\n    this.newSearch = '';\r\n    this.state = {\r\n      books: [],\r\n    }\r\n  }\r\n\r\n  apiCall = (input) => {\r\n    axios({\r\n      url: 'https://www.googleapis.com/books/v1/volumes',\r\n      method: 'GET',\r\n      responseType: 'json',\r\n      params: {\r\n        q: input,\r\n        maxResults: 10\r\n      }\r\n    }).then((results) => {\r\n      const bookResults = results.data.items;\r\n      this.setState({\r\n        books: bookResults\r\n      });\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.newSearch = this.props.match.params.search;\r\n    this.apiCall(this.props.match.params.search);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.newSearch !== this.props.match.params.search) {\r\n      this.newSearch = this.props.match.params.search;\r\n      this.apiCall(this.newSearch);\r\n    }\r\n  }\r\n\r\n  handleClick = (bookObject) => {\r\n    const dbRef = firebase.database().ref()\r\n    const bookAndCompleted = {\r\n      book: bookObject.volumeInfo,\r\n      completed: false\r\n    }\r\n    dbRef.push(bookAndCompleted);\r\n  }\r\n\r\n  // Function to check if an info is missing. If so, display the corresponding message\r\n  handleMissingInfoError = (info, message) => {\r\n    let checkedInfo;\r\n    if (info) {\r\n      checkedInfo = this.parseBookInfo(info);\r\n    } else {\r\n      checkedInfo = message;\r\n    }\r\n    return checkedInfo;\r\n  }\r\n\r\n  // In case of multiple pieces of information, separate each with a comma, and add the word 'and' before the last one\r\n  parseBookInfo = (info) => {\r\n    if (typeof info === 'object') {\r\n      if (info.length === 1) {\r\n        return info;\r\n      } else if (info.length === 2) {\r\n        return `${info[0]} and ${info[1]}`;\r\n      } else if (info.length > 2) {\r\n        let parsedInfo = '';\r\n        info.forEach((value, index) => {\r\n          if (index === info.length - 1) {\r\n            parsedInfo += `and ${value}`;\r\n          } else {\r\n            parsedInfo += `${value}, `;\r\n          }\r\n        });\r\n        return parsedInfo;\r\n      }\r\n    } else {\r\n      return info;\r\n    }\r\n  }\r\n\r\n\r\n  // If the cover image is missing, display no-cover image\r\n  handleMissingCoverImage = (info) => {\r\n    if (info.imageLinks) {\r\n      return info.imageLinks.thumbnail;\r\n    } else {\r\n      return noCover;\r\n    }\r\n  }\r\n\r\n  setUpDataBase() {\r\n    // Make reference to database\r\n    const dbRef = firebase.database().ref();\r\n    // Get data from database\r\n    let firebaseDataObj;\r\n    dbRef.on('value', (data) => {\r\n      firebaseDataObj = data.val();\r\n    });\r\n  }\r\n\r\n  createBookObject = () => {\r\n    return\r\n  }\r\n\r\n  // Render relevant information on screen\r\n  renderInformation = (book) => {\r\n    const title = this.handleMissingInfoError(book.volumeInfo.title, 'Unknown title');\r\n    const authors = this.handleMissingInfoError(book.volumeInfo.authors, 'Unknown author');\r\n    const category = this.handleMissingInfoError(book.volumeInfo.categories, 'Unknown genre');\r\n    const rating = this.handleMissingInfoError(book.volumeInfo.averageRating, 'No rating');\r\n    const bookImg = this.handleMissingCoverImage(book.volumeInfo) // add stock no image available \r\n    const pageCount = this.handleMissingInfoError(book.volumeInfo.pageCount, 'Unknown page count');\r\n    const buyBook = this.handleMissingInfoError(book.saleInfo.buyLink, 'Not available for purchase on Google Play');\r\n    const publisher = this.handleMissingInfoError(book.volumeInfo.publisher, 'Unknown publisher');\r\n    const language = this.handleMissingInfoError(book.volumeInfo.language, 'Unknown language');\r\n    const description = this.handleMissingInfoError(book.volumeInfo.description, 'No description');\r\n    const publishedDate = this.handleMissingInfoError(book.volumeInfo.publishedDate, 'Unknown published date');\r\n\r\n    return (\r\n      <div key={book.id}>\r\n        <h2>{title}</h2>\r\n        <h3>{authors}</h3>\r\n        <h3>{category}</h3>\r\n        <h4>{rating}</h4>\r\n        <h4>{publishedDate}</h4>\r\n        <h4>{publisher}</h4>\r\n        <h4>{pageCount}</h4>\r\n        <h4>{language}</h4>\r\n        {\r\n          buyBook.includes('https')\r\n            ? <a href={buyBook}>Buy book</a>\r\n            : <p>{buyBook}</p>\r\n        }\r\n        <h4>{description}</h4>\r\n        <img src={bookImg} alt={`Book cover for ${title}`} />\r\n        <button onClick={() => { this.handleClick(book) }}>Add to my bookshelf</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // In case API call returns no results, render the following error message\r\n  renderNoResultMessage = () => {\r\n    return (\r\n      <h2>No Results Found :(</h2>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.books\r\n            ? this.state.books.map((book) => this.renderInformation(book))\r\n            : this.renderNoResultMessage()\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchResults;","C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\HeaderNav.js",[],"C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\Bookshelf.js",[],"C:\\Users\\jonly\\Desktop\\websites\\juno\\project6\\project-6\\src\\firebase.js",[],["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":105,"column":7,"nodeType":"48","messageId":"49","endLine":105,"endColumn":22},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'firebaseDataObj' is assigned a value but never used.","Identifier","unusedVar",["52"],["53"],"no-global-assign","no-unsafe-negation"]