[{"/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/index.js":"1","/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/reportWebVitals.js":"2","/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/App.js":"3","/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/SearchResults.js":"4","/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/HeaderNav.js":"5","/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/LandingPage.js":"6","/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/Bookshelf.js":"7","/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/firebase.js":"8"},{"size":500,"mtime":1607200548939,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1607200548939,"results":"11","hashOfConfig":"10"},{"size":1350,"mtime":1607448284624,"results":"12","hashOfConfig":"10"},{"size":4895,"mtime":1607448284627,"results":"13","hashOfConfig":"10"},{"size":1341,"mtime":1607448284625,"results":"14","hashOfConfig":"10"},{"size":281,"mtime":1607448284626,"results":"15","hashOfConfig":"10"},{"size":4477,"mtime":1607456543791,"results":"16","hashOfConfig":"10"},{"size":470,"mtime":1607448284639,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"18p9hdc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/index.js",[],["38","39"],"/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/reportWebVitals.js",[],"/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/App.js",["40","41"],"import './App.css';\nimport axios from 'axios';\n// import firebase from './firebase.js';\nimport { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport SearchResults from './SearchResults';\nimport LandingPage from './LandingPage';\nimport HeaderNav from './HeaderNav';\nimport Bookshelf from './Bookshelf';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.newInput = false;\n    this.state = {\n      suggestions: [],\n      userInput: ''\n    }\n  }\n\n  // Update user's input; when the user types a new character, set this.newInput to 'true'\n  updateUserInput = (e) => {\n    const userSearch = e.target.value;\n    if (userSearch) { this.newInput = true; }\n    this.setState({\n      userInput: userSearch\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <HeaderNav \n          submit={((e)=> {\n            this.handleSubmit(e);\n          })}\n          inputChange={this.updateUserInput}\n          userSearch={this.state.userInput}/>\n          <Route exact path=\"/\" component={LandingPage}/>\n          <Route path=\"/search/:search\" component={SearchResults}/>\n          <Route path=\"/mybookshelf\" component={Bookshelf} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/SearchResults.js",["42"],"import { Component } from 'react';\nimport axios from 'axios';\nimport noCover from './assets/noCover.jpg';\nimport firebase from './firebase.js';\n\nclass SearchResults extends Component {\n  constructor() {\n    super();\n    this.newSearch = '';\n    this.state = {\n      books: [],\n    }\n  }\n\n  apiCall = (input) => {\n    axios({\n      url: 'https://www.googleapis.com/books/v1/volumes',\n      method: 'GET',\n      responseType: 'json',\n      params: {\n        q: input,\n        maxResults: 10\n      }\n    }).then((results) => {\n      const bookResults = results.data.items;\n      this.setState({\n        books: bookResults\n      });\n    }).catch((error) => {\n      console.log(error);\n    })\n  }\n\n  componentDidMount() {\n    this.newSearch = this.props.match.params.search;\n    this.apiCall(this.props.match.params.search);\n  }\n\n  componentDidUpdate() {\n    if (this.newSearch !== this.props.match.params.search) {\n      this.newSearch = this.props.match.params.search;\n      this.apiCall(this.newSearch);\n    }\n  }\n\n  handleClick = (bookObject) => {\n    const dbRef = firebase.database().ref()\n    const bookAndCompleted = {\n      book: bookObject.volumeInfo,\n      completed: false\n    }\n    dbRef.push(bookAndCompleted);\n  }\n\n  // Function to check if an info is missing. If so, display the corresponding message\n  handleMissingInfoError = (info, message) => {\n    let checkedInfo;\n    if (info) {\n      checkedInfo = this.parseBookInfo(info);\n    } else {\n      checkedInfo = message;\n    }\n    return checkedInfo;\n  }\n\n  // In case of multiple pieces of information, separate each with a comma, and add the word 'and' before the last one\n  parseBookInfo = (info) => {\n    if (typeof info === 'object') {\n      if (info.length === 1) {\n        return info;\n      } else if (info.length === 2) {\n        return `${info[0]} and ${info[1]}`;\n      } else if (info.length > 2) {\n        let parsedInfo = '';\n        info.forEach((value, index) => {\n          if (index === info.length - 1) {\n            parsedInfo += `and ${value}`;\n          } else {\n            parsedInfo += `${value}, `;\n          }\n        });\n        return parsedInfo;\n      }\n    } else {\n      return info;\n    }\n  }\n\n\n  // If the cover image is missing, display no-cover image\n  handleMissingCoverImage = (info) => {\n    if (info.imageLinks) {\n      return info.imageLinks.thumbnail;\n    } else {\n      return noCover;\n    }\n  }\n\n  setUpDataBase() {\n    // Make reference to database\n    const dbRef = firebase.database().ref();\n    // Get data from database\n    let firebaseDataObj;\n    dbRef.on('value', (data) => {\n      firebaseDataObj = data.val();\n    });\n  }\n\n  // createBookObject = () => {\n  //     return \n  // }\n\n  // Render relevant information on screen\n  renderInformation = (book) => {\n    const title = this.handleMissingInfoError(book.volumeInfo.title, 'Unknown title');\n    const authors = this.handleMissingInfoError(book.volumeInfo.authors, 'Unknown author');\n    const category = this.handleMissingInfoError(book.volumeInfo.categories, 'Unknown genre');\n    const rating = this.handleMissingInfoError(book.volumeInfo.averageRating, 'No rating');\n    const bookImg = this.handleMissingCoverImage(book.volumeInfo) // add stock no image available \n    const pageCount = this.handleMissingInfoError(book.volumeInfo.pageCount, 'Unknown page count');\n    const buyBook = this.handleMissingInfoError(book.saleInfo.buyLink, 'Not available for purchase on Google Play');\n    const publisher = this.handleMissingInfoError(book.volumeInfo.publisher, 'Unknown publisher');\n    const language = this.handleMissingInfoError(book.volumeInfo.language, 'Unknown language');\n    const description = this.handleMissingInfoError(book.volumeInfo.description, 'No description');\n    const publishedDate = this.handleMissingInfoError(book.volumeInfo.publishedDate, 'Unknown published date');\n\n    return (\n      <div key={book.id}>\n        <h2>{title}</h2>\n        <h3>{authors}</h3>\n        <h3>{category}</h3>\n        <h4>{rating}</h4>\n        <h4>{publishedDate}</h4>\n        <h4>{publisher}</h4>\n        <h4>{pageCount}</h4>\n        <h4>{language}</h4>\n        {\n          buyBook.includes('https')\n            ? <a href={buyBook}>Buy book</a>\n            : <p>{buyBook}</p>\n        }\n        <h4>{description}</h4>\n        <img src={bookImg} alt={`Book cover for ${title}`} />\n        <button onClick={() => { this.handleClick(book) }}>Add to my bookshelf</button>\n      </div>\n    );\n  }\n\n  // In case API call returns no results, render the following error message\n  renderNoResultMessage = () => {\n    return (\n      <h2>No Results Found :(</h2>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        {\n          this.state.books\n            ? this.state.books.map((book) => this.renderInformation(book))\n            : this.renderNoResultMessage()\n        }\n      </div>\n    )\n  }\n}\n\nexport default SearchResults;","/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/HeaderNav.js",[],"/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/LandingPage.js",["43","44"],"import { Component } from 'react';\nimport firebase from './firebase.js';\n\nclass LandingPage extends Component {\n    render() {\n        return(\n            <div className=\"landingPageImage\">\n                <h2></h2>\n            </div>\n        )\n    }\n}\n\nexport default LandingPage;","/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/Bookshelf.js",[],"/Users/martinnguyen/Documents/juno/projects/book-club-reads/src/firebase.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":13},{"ruleId":"49","severity":1,"message":"53","line":5,"column":42,"nodeType":"51","messageId":"52","endLine":5,"endColumn":46},{"ruleId":"49","severity":1,"message":"54","line":105,"column":7,"nodeType":"51","messageId":"52","endLine":105,"endColumn":22},{"ruleId":"49","severity":1,"message":"55","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":16},{"ruleId":"56","severity":1,"message":"57","line":8,"column":17,"nodeType":"58","endLine":8,"endColumn":21},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'firebaseDataObj' is assigned a value but never used.","'firebase' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]