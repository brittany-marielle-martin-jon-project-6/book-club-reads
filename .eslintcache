[{"/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/index.js":"1","/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/reportWebVitals.js":"2","/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/App.js":"3","/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/Bookshelf.js":"4","/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/LandingPage.js":"5","/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/SearchResults.js":"6","/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/HeaderNav.js":"7","/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/BookDetails.js":"8","/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/Footer.js":"9","/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/firebase.js":"10"},{"size":500,"mtime":1607369339514,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1607369339517,"results":"13","hashOfConfig":"12"},{"size":832,"mtime":1607541233148,"results":"14","hashOfConfig":"12"},{"size":5164,"mtime":1607562590098,"results":"15","hashOfConfig":"12"},{"size":333,"mtime":1607541233157,"results":"16","hashOfConfig":"12"},{"size":5590,"mtime":1607562590099,"results":"17","hashOfConfig":"12"},{"size":1752,"mtime":1607541233156,"results":"18","hashOfConfig":"12"},{"size":2948,"mtime":1607562590095,"results":"19","hashOfConfig":"12"},{"size":279,"mtime":1607541233155,"results":"20","hashOfConfig":"12"},{"size":470,"mtime":1607448336716,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"11o8i8p",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/index.js",[],["45","46"],"/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/reportWebVitals.js",[],"/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/App.js",[],"/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/Bookshelf.js",[],"/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/LandingPage.js",[],"/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/SearchResults.js",["47","48"],"import { Component } from 'react';\nimport axios from 'axios';\nimport noCover from './assets/noCover.jpg';\nimport firebase from './firebase.js';\n\nclass SearchResults extends Component {\n  constructor() {\n    super();\n    this.newSearch = '';\n    this.state = {\n      books: [],\n    }\n  }\n\n  apiCall = (input) => {\n    axios({\n      url: 'https://www.googleapis.com/books/v1/volumes',\n      method: 'GET',\n      responseType: 'json',\n      params: {\n        q: input,\n        maxResults: 12\n      }\n    }).then((results) => {\n      const bookResults = results.data.items;\n      const formattedBookResults = [];\n      bookResults.forEach((book) => {\n        formattedBookResults.push(this.createBookObj(book));\n      });\n      this.setState({\n        books: formattedBookResults\n      });\n    }).catch((error) => {\n      console.log(error);\n    })\n  }\n\n  createBookObj = (book) => {\n      const bookObj = {};\n      bookObj.id = book.id;\n      bookObj.title = this.handleMissingInfoError(book.volumeInfo.title, 'Unknown title');\n      bookObj.authors = this.handleMissingInfoError(book.volumeInfo.authors, 'Unknown author');\n      bookObj.category = this.handleMissingInfoError(book.volumeInfo.categories, 'Unknown genre');\n      bookObj.rating = this.handleMissingInfoError(book.volumeInfo.averageRating, 'No rating');\n      bookObj.bookImg = this.handleMissingCoverImage(book.volumeInfo) // add stock no image available \n      bookObj.pageCount = this.handleMissingInfoError(book.volumeInfo.pageCount, 'Unknown page count');\n      bookObj.publisher = this.handleMissingInfoError(book.volumeInfo.publisher, 'Unknown publisher');\n      bookObj.language = this.handleMissingInfoError(book.volumeInfo.language, 'Unknown language');\n      bookObj.description = this.handleMissingInfoError(book.volumeInfo.description, 'No description');\n      bookObj.publishedDate = this.handleMissingInfoError(book.volumeInfo.publishedDate, 'Unknown published date');\n      return bookObj;\n  }\n\n  componentDidMount() {\n    this.newSearch = this.props.match.params.search;\n    this.apiCall(this.props.match.params.search);\n  }\n\n  componentDidUpdate() {\n    if (this.newSearch !== this.props.match.params.search) {\n      this.newSearch = this.props.match.params.search;\n      this.apiCall(this.newSearch);\n    }\n  }\n\n  handleClick = (bookObject) => {\n    const dbRef = firebase.database().ref()\n    const bookAndCompleted = {\n      book: bookObject,\n      completed: false\n    }\n    dbRef.push(bookAndCompleted);\n  }\n\n  // Function to check if an info is missing. If so, display the corresponding message\n  handleMissingInfoError = (info, message) => {\n    let checkedInfo;\n    if (info) {\n      checkedInfo = this.parseBookInfo(info);\n    } else {\n      checkedInfo = message;\n    }\n    return checkedInfo;\n  }\n\n  // In case of multiple pieces of information, separate each with a comma, and add the word 'and' before the last one\n  parseBookInfo = (info) => {\n    if (typeof info === 'object') {\n      if (info.length === 1) {\n        return info;\n      } else if (info.length === 2) {\n        return `${info[0]} and ${info[1]}`;\n      } else if (info.length > 2) {\n        let parsedInfo = '';\n        info.forEach((value, index) => {\n          if (index === info.length - 1) {\n            parsedInfo += `and ${value}`;\n          } else {\n            parsedInfo += `${value}, `;\n          }\n        });\n        return parsedInfo;\n      }\n    } else {\n      return info;\n    }\n  }\n\n\n  // If the cover image is missing, display no-cover image\n  handleMissingCoverImage = (info) => {\n    if (info.imageLinks) {\n      return info.imageLinks.thumbnail;\n    } else {\n      return noCover;\n    }\n  }\n\n  handleLongInfo = (info, maxLength) => {\n    if (info.length > maxLength) {\n      if (info.charAt(maxLength - 1) !== ' ') {\n        const omittedInfo = info.slice(maxLength, info.length);\n        let positionOfNextSpace = omittedInfo.search(' ');\n        if (positionOfNextSpace < 0) {\n          const numOfCharsToEndOfString = info.length - maxLength;\n          if (numOfCharsToEndOfString < 10) {\n            positionOfNextSpace = numOfCharsToEndOfString;\n          }\n        }\n        maxLength += positionOfNextSpace;\n      }\n      info = info.slice(0, maxLength);\n      info += ' ...';\n    }\n    return info;\n  }\n\n  // Render relevant information on screen\n  renderInformation = (book) => {\n    return (\n      <div className=\"result-box\" key={book.id} style={{\"backgroundImage\": `url(${book.bookImg})`}}>\n        <img src={book.bookImg} alt={`Book cover for ${this.handleLongInfo(book.title, 40)}`} />\n        <div className=\"descriptionContainer\">\n          <h2 className=\"title\">{this.handleLongInfo(book.title, 50)}</h2>\n          <h3>By: {book.authors}</h3>\n          <h3>Genre: {book.category}</h3>\n          <h4>Rating: {book.rating}</h4>\n        </div>\n        <div className=\"buttonContainer\">\n          <button><i className='fas fa-info-circle'></i>  More Details</button>\n          <button onClick={() => { this.handleClick(book) }}><i className='fas fa-plus'></i>  Add to my bookshelf</button>\n        </div>\n      </div>\n    );\n  }\n\n  // In case API call returns no results, render the following error message\n  renderNoResultMessage = () => {\n    return (\n      <h2>No Results Found :(</h2>\n    )\n  }\n\n  render() {\n    return (\n      <section className=\"searchResSection\">\n        {\n          this.state.books\n            ? this.state.books.map((book) => this.renderInformation(book))\n            : this.renderNoResultMessage()\n        }\n      </section>\n    )\n  }\n}\n\n\nexport default SearchResults;","/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/HeaderNav.js",[],"/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/BookDetails.js",[],"/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/Footer.js",[],"/Users/marielleindar/Desktop/sites/juno/projects/project-6/book-club-reads/src/firebase.js",[],["49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":21,"nodeType":"57","messageId":"58","endLine":1,"endColumn":29},{"ruleId":"55","severity":1,"message":"59","line":125,"column":7,"nodeType":"57","messageId":"58","endLine":125,"endColumn":22},{"ruleId":"51","replacedBy":"60"},{"ruleId":"53","replacedBy":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'firebaseDataObj' is assigned a value but never used.",["62"],["63"],"no-global-assign","no-unsafe-negation"]