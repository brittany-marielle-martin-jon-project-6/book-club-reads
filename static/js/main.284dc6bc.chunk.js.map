{"version":3,"sources":["assets/noCover.jpg","firebase.js","SearchResults.js","LandingPage.js","HeaderNav.js","Bookshelf.js","BookDetails.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","SearchResults","apiCall","input","axios","url","method","responseType","params","q","maxResults","startIndex","state","orderBy","then","results","data","items","forEach","book","books","push","createBookObj","setState","catch","error","console","log","bookObj","id","title","handleMissingInfoError","volumeInfo","authors","category","categories","rating","averageRating","bookImg","handleMissingCoverImage","pageCount","publisher","language","description","publishedDate","searchInput","newSearch","handleButtonClick","bookObject","saved","bookAndCompleted","completed","dbRef","info","message","parseBookInfo","length","parsedInfo","value","index","imageLinks","thumbnail","noCover","handleLongInfo","maxLength","charAt","positionOfNextSpace","slice","search","numOfCharsToEndOfString","renderInformation","className","style","src","alt","to","onClick","renderNoResultMessage","handleNextPage","newStartIndex","next","pageNumber","handlePreviousPage","renderPaginationButtons","database","ref","maxStartIndexOfDisplayedResults","this","props","match","displayedResults","map","Component","LandingPage","href","HeaderNav","suggestedTitles","suggestions","updateUserInput","e","userSearch","target","newInput","userInput","handleSubmit","preventDefault","renderNav","renderForm","onSubmit","onChange","event","getSuggestion","htmlFor","autoComplete","type","name","placeholder","suggestion","renderSuggestion","titleSuggestion","Bookshelf","updateFirebase","on","firebaseBookObj","val","bookArray","bookKey","eachBook","finishedReading","savedBooks","addWindowEventListener","window","addEventListener","windowInnerWidth","innerWidth","handleRemoveBook","bookId","child","remove","indexOfDisplayedBook","handleClick","change","newIndex","indexLoop","displayBook","key","bookImageUrl","altText","bookTitle","createLink","callbackHtml","toggleDisplay","gridDisplay","renderBookDisplay","numOfBooks","completedCalculation","renderGridDisplay","renderCarousel","Math","floor","displayArray","i","firebaseIdOfDisplayedBook","renderErrorMessage","completedBook","completionPercentage","ceil","getNumOfBooksToDisplayOnCarousel","off","BookDetails","getDataFromFirebase","firebaseDataObj","bookToDisplay","removed","handleAddBook","renderButton","renderCheckbox","checked","handleCheckbox","renderExitButton","update","Footer","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.284dc6bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noCover.fea3d7c6.jpg\";","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA87pRApsH2HcpcixtBcOGe4gsRqyIwQ2s\",\n    authDomain: \"project-6-507f3.firebaseapp.com\",\n    projectId: \"project-6-507f3\",\n    storageBucket: \"project-6-507f3.appspot.com\",\n    messagingSenderId: \"418153390359\",\n    appId: \"1:418153390359:web:fdacdd374f5353ad9d9752\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n    export default firebase;","import { Component } from 'react';\nimport axios from 'axios';\nimport noCover from './assets/noCover.jpg';\nimport firebase from './firebase.js';\nimport { Link } from 'react-router-dom';\n\nclass SearchResults extends Component {\n  constructor() {\n    super();\n    this.newSearch = '';\n    this.dbRef = firebase.database().ref();\n    this.books = [];\n    this.maxStartIndexOfDisplayedResults = 0;\n    this.state = {\n      books: [],\n      startIndex: 0,\n      next: false,\n      pageNumber: 1\n    }\n  }\n\n  apiCall = (input) => {\n    axios({\n      url: 'https://www.googleapis.com/books/v1/volumes',\n      method: 'GET',\n      responseType: 'json',\n      params: {\n        q: input,\n        maxResults: 12,\n        startIndex: this.state.startIndex,\n        orderBy: 'relevance'\n      }\n    }).then((results) => {\n      const bookResults = results.data.items;\n      bookResults.forEach((book) => {\n        this.books.push(this.createBookObj(book));\n      });\n      this.setState({\n        books: this.books\n      });\n    }).catch((error) => {\n      console.log(error);\n    })\n  }\n\n  createBookObj = (book) => {\n      const bookObj = {};\n      bookObj.id = book.id;\n      bookObj.title = this.handleMissingInfoError(book.volumeInfo.title, 'Unknown title');\n      bookObj.authors = this.handleMissingInfoError(book.volumeInfo.authors, 'Unknown author');\n      bookObj.category = this.handleMissingInfoError(book.volumeInfo.categories, 'Unknown genre');\n      bookObj.rating = this.handleMissingInfoError(book.volumeInfo.averageRating, 'No rating');\n      bookObj.bookImg = this.handleMissingCoverImage(book.volumeInfo); // add stock no image available \n      bookObj.pageCount = this.handleMissingInfoError(book.volumeInfo.pageCount, 'Unknown page count');\n      bookObj.publisher = this.handleMissingInfoError(book.volumeInfo.publisher, 'Unknown publisher');\n      bookObj.language = this.handleMissingInfoError(book.volumeInfo.language, 'Unknown language');\n      bookObj.description = this.handleMissingInfoError(book.volumeInfo.description, 'No description');\n      bookObj.publishedDate = this.handleMissingInfoError(book.volumeInfo.publishedDate, 'Unknown published date');\n      bookObj.searchInput = this.newSearch;\n      return bookObj;\n  }\n\n  componentDidMount() {\n    this.newSearch = this.props.match.params.search;\n    this.apiCall(this.props.match.params.search);\n  }\n\n  componentDidUpdate() {\n    if (this.newSearch !== this.props.match.params.search) {\n      this.newSearch = this.props.match.params.search;\n      this.books = [];\n      this.apiCall(this.newSearch);\n    }\n    if (this.state.next && this.state.startIndex > this.maxStartIndexOfDisplayedResults) {\n      if (this.state.startIndex > this.maxStartIndexOfDisplayedResults) {\n        this.maxStartIndexOfDisplayedResults = this.state.startIndex;\n      }\n      this.apiCall(this.newSearch);\n      this.setState({\n        next: false\n      })\n    }\n  }\n\n  handleButtonClick = (bookObject, saved) => {\n    const bookAndCompleted = {\n      book: bookObject,\n      completed: false,\n      saved: saved\n    }\n    this.dbRef.push(bookAndCompleted);\n  }\n\n  // Function to check if an info is missing. If so, display the corresponding message\n  handleMissingInfoError = (info, message) => {\n    let checkedInfo;\n    if (info) {\n      checkedInfo = this.parseBookInfo(info);\n    } else {\n      checkedInfo = message;\n    }\n    return checkedInfo;\n  }\n  // In case of multiple pieces of information, separate each with a comma, and add the word 'and' before the last one\n  parseBookInfo = (info) => {\n    if (typeof info === 'object') {\n      if (info.length === 1) {\n        return info;\n      } else if (info.length === 2) {\n        return `${info[0]} and ${info[1]}`;\n      } else if (info.length > 2) {\n        let parsedInfo = '';\n        info.forEach((value, index) => {\n          if (index === info.length - 1) {\n            parsedInfo += `and ${value}`;\n          } else {\n            parsedInfo += `${value}, `;\n          }\n        });\n        return parsedInfo;\n      }\n    } else {\n      return info;\n    }\n  }\n  // If the cover image is missing, display no-cover image\n  handleMissingCoverImage = (info) => {\n    if (info.imageLinks) {\n      return info.imageLinks.thumbnail;\n    } else {\n      return noCover;\n    }\n  }\n  handleLongInfo = (info, maxLength) => {\n    if (info.length > maxLength) {\n      if (info.charAt(maxLength - 1) !== ' ') {\n        const omittedInfo = info.slice(maxLength, info.length);\n        let positionOfNextSpace = omittedInfo.search(' ');\n        if (positionOfNextSpace < 0) {\n          const numOfCharsToEndOfString = info.length - maxLength;\n          if (numOfCharsToEndOfString < 10) {\n            positionOfNextSpace = numOfCharsToEndOfString;\n          }\n        }\n        maxLength += positionOfNextSpace;\n      }\n      info = info.slice(0, maxLength);\n      info += ' ...';\n    }\n    return info;\n  }\n\n  // Render relevant information on screen\n  renderInformation = (book) => {\n    return (\n      <div className=\"result-box\" key={book.id} style={{\"backgroundImage\": `url(${book.bookImg})`}}>\n        <img src={book.bookImg} alt={`Book cover for ${this.handleLongInfo(book.title, 40)}`} />\n        <div className=\"descriptionContainer\">\n          <h2 className=\"title\">{this.handleLongInfo(book.title, 50)}</h2>\n          <h3>By: {book.authors}</h3>\n          <h3>Genre: {book.category}</h3>\n          <h4>Rating: {book.rating}</h4>\n        </div>\n        <div className=\"buttonContainer\">\n          <Link to={`/moredetails/${book.title}`}>\n          <button onClick={() => { this.handleButtonClick(book, false) }}><i className='fas fa-info-circle'></i>  More Details</button>\n          </Link>\n          <button onClick={() => { this.handleButtonClick(book, true) }}><i className='fas fa-plus'></i>  Add to my bookshelf</button>\n        </div>\n      </div>\n    );\n  }\n\n  // In case API call returns no results, render the following error message\n  renderNoResultMessage = () => {\n    return (\n      <h2>No Results Found :(</h2>\n    )\n  }\n\n  handleNextPage = () => {\n    let newStartIndex = this.state.startIndex + 12;\n    this.setState({\n      startIndex: newStartIndex,\n      next: true,\n      pageNumber: this.state.pageNumber + 1\n    })\n  }\n\n  handlePreviousPage = () => {\n    let newStartIndex = this.state.startIndex - 12;\n    if (newStartIndex < 0) {\n      newStartIndex = 0;\n    }\n    this.setState({\n      startIndex: newStartIndex,\n      pageNumber: this.state.pageNumber - 1\n    })\n  }\n\n  renderPaginationButtons = () => {\n    return(\n      <div>\n        <button onClick={this.handlePreviousPage}>Previous</button>\n        <button onClick={this.handleNextPage}>Next</button>\n      </div>\n    )\n  }\n\n  render() {\n    const displayedResults = this.state.books.slice(this.state.startIndex, this.state.startIndex + 12);\n    return (\n      <div>\n\n        <section className=\"searchResSection\">\n          {\n            displayedResults\n              ? displayedResults.map((book) => this.renderInformation(book))\n              : this.renderNoResultMessage()\n          }\n        </section>\n        {\n          this.renderPaginationButtons()\n        }\n      </div>\n    )\n  }\n}\n\n\nexport default SearchResults;","import { Component } from 'react';\n\nclass LandingPage extends Component {\n  render() {\n    return (\n      <div className=\"landingPage\">\n        <h2 className=\"container\">Create the reading list of your dreams and track your progress!</h2>\n        <div className=\"iconContainer\">\n          <a href=\"#\"><i className=\"fab fa-twitter\"></i></a>\n          <a href=\"#\"><i className=\"fab fa-instagram\"></i></a>\n          <a href=\"#\"><i className=\"fab fa-linkedin\"></i></a>\n          <a href=\"#\"><i className=\"fab fa-facebook-square\"></i></a>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LandingPage;","import { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass HeaderNav extends Component {\n  constructor() {\n    super();\n    this.newInput = false;\n    this.state = {\n      suggestions: [],\n      userInput: ''\n    }\n  }\n  apiCall = (input) => {\n    axios({\n      url: 'https://www.googleapis.com/books/v1/volumes',\n      method: 'GET',\n      responseType: 'json',\n      params: {\n        q: input,\n        maxResults: 5,\n        startIndex: 0,\n        orderBy: 'relevance'\n      }\n    }).then((results) => {\n      const bookResults = results.data.items;\n      const suggestedTitles = bookResults.map((book) => {\n        return book.volumeInfo.title;\n      })\n      this.setState({\n        suggestions: suggestedTitles\n      });\n    }).catch((error) => {\n      console.log(error);\n    })\n  }\n  componentDidUpdate() {\n    if (this.newInput) {\n      this.apiCall(this.state.userInput);\n      this.newInput = false;\n    }\n  }\n  updateUserInput = (e) => {\n    const userSearch = e.target.value;\n    if (userSearch) { \n      this.newInput = true; \n    }\n    this.setState({\n      userInput: userSearch\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n  }\n  renderNav = () => {\n    return (\n      <nav>\n        <ul className=\"headerNav\">\n          <li><Link to=\"/\" className=\"navLinks\">Browse</Link></li>\n          <li><Link to=\"/mybookshelf\" className=\"navLinks\">My Bookshelf</Link></li>\n        </ul>\n      </nav>\n    )\n  }\n  renderForm = () => {\n    return(\n      <div className=\"titleFormContainer\">\n        <Link to=\"/book-club-reads/\" className=\"logo\">\n          <h1><i className=\"fas fa-book-open bookIcon\"></i><span className=\"capitalB\">B</span>ook Club Reads</h1>\n        </Link>\n        <form onSubmit={this.handleSubmit} onChange={(event) => this.getSuggestion(event)}>\n          <label htmlFor=\"searchBook\" className=\"srOnly\">Search </label>\n          <input autoComplete=\"off\" type='text' id='searchbook' name='searchbook' className='searchBook' placeholder='title, author, genre' value={this.state.userInput} onChange={this.updateUserInput}></input>\n          <div className=\"suggestionContainer\">\n            {\n              this.state.suggestions.map((suggestion, index) => {\n                return this.renderSuggestion(suggestion, index);\n              })\n            }\n          </div>\n          <Link to={`/search/${this.state.userInput}`}>\n            <button className='searchButton'><i className=\"fas fa-search\"></i></button>\n          </Link>\n        </form>\n      </div>\n    )\n  }\n  renderSuggestion = (titleSuggestion, index) => {\n    titleSuggestion = this.handleLongInfo(titleSuggestion, 25);\n    return(\n      <div key={index} className=\"individualSuggestion\">\n        <input type=\"radio\" name=\"suggestion\" value={titleSuggestion} id={`suggestion-${index}`}/>\n        <label htmlFor={`suggestion-${index}`}>{titleSuggestion}</label>\n      </div>\n    )\n  }\n  getSuggestion = (event) => {\n    const suggestion = event.target.value;\n    this.setState({\n      userInput: suggestion\n    })\n  }\n  handleLongInfo = (info, maxLength) => {\n    if (info.length > maxLength) {\n      if (info.charAt(maxLength - 1) !== ' ') {\n        const omittedInfo = info.slice(maxLength, info.length);\n        let positionOfNextSpace = omittedInfo.search(' ');\n        if (positionOfNextSpace < 0) {\n          const numOfCharsToEndOfString = info.length - maxLength;\n          if (numOfCharsToEndOfString < 10) {\n            positionOfNextSpace = numOfCharsToEndOfString;\n          }\n        }\n        maxLength += positionOfNextSpace;\n      }\n      info = info.slice(0, maxLength);\n      info += ' ...';\n    }\n    return info;\n  }\n  render() {\n    return (\n      <header>\n        <div className=\"flexContainer container\">\n          {\n            this.renderForm()\n          }\n          {\n            this.renderNav()\n          }\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default HeaderNav;","import { Component, Fragment } from 'react';\nimport firebase from './firebase.js';\nimport { Link } from 'react-router-dom';\n\nclass Bookshelf extends Component {\n  constructor() {\n    super();\n    this.dbRef = firebase.database().ref();\n    this.state = {\n      savedBooks: [],\n      windowInnerWidth: 1280,\n      indexOfDisplayedBook: 0,\n      gridDisplay: false\n    }\n  }\n\n  updateFirebase = () => {\n    this.dbRef.on('value', (data) => {\n      const firebaseBookObj = data.val();\n      const bookArray = [];\n      for (let bookKey in firebaseBookObj) {\n        const eachBook = firebaseBookObj[bookKey].book;\n        const finishedReading = firebaseBookObj[bookKey].completed;\n        const saved = firebaseBookObj[bookKey].saved;\n        if (saved) {\n          bookArray.push([eachBook, finishedReading, bookKey]);\n        }\n      }\n      this.setState({\n        savedBooks: bookArray\n      })\n    });\n  }\n\n  addWindowEventListener = () => {\n    window.addEventListener('resize', () => {\n      this.setState({\n        windowInnerWidth: window.innerWidth\n      })\n    });\n  }\n\n  componentDidMount() {\n    this.updateFirebase();\n    this.addWindowEventListener();\n  }\n\n  handleRemoveBook = (bookId) => {\n    this.dbRef.child(bookId).remove();\n    // Error handling when the index of displayed book is greater than the max index of saveBooks array\n    if (this.state.indexOfDisplayedBook >= this.state.savedBooks.length - 1) {\n      this.setState({\n        indexOfDisplayedBook: this.state.indexOfDisplayedBook - 1\n      })\n    }\n  }\n\n  componentWillUnmount() {\n      this.dbRef.off();\n  }\n\n  handleClick = (change) => {\n    let newIndex = this.state.indexOfDisplayedBook + change;\n    newIndex = this.indexLoop(newIndex);\n    this.setState({\n      indexOfDisplayedBook: newIndex\n    })\n  }\n\n  // Create infinite loop for the carousel display  \n  indexLoop = (index) => {\n    if (index < 0) {\n      // if the index is less than 0, then set it to max index minus the value of the index itself; '+' is used in the code because index is negative  \n      index = this.state.savedBooks.length + index;\n    } else if (index > this.state.savedBooks.length - 1) {\n      // if the index is more than max index, then set it to be the difference between itself and the length of the array\n      index = index - this.state.savedBooks.length;\n    }\n    return index;\n  }\n  \n  // Function to display individual books  \n  displayBook = (key, className, bookImageUrl, altText, bookTitle) => {\n      return (\n          <div key={key} className={className}>\n              {\n                className === 'displayedBook'\n                  ? this.createLink(bookTitle, () => <img src={bookImageUrl} alt={altText} />)\n                  : <img src={bookImageUrl} alt={altText}/>\n              }\n          </div>\n      )\n  } \n\n  createLink = (bookTitle, callbackHtml) => {\n    return(\n      <Link to={`/mybookshelf/${bookTitle}`}>\n        {\n          callbackHtml()\n        }\n      </Link>\n    )\n  }\n\n  toggleDisplay = () => {\n      this.setState({\n        gridDisplay: !this.state.gridDisplay\n      })\n  }\n  \n  // Render the books on the screen\n  renderBookDisplay = (numOfBooks) => {\n    return (\n      <Fragment>\n        <div className=\"dashboardContainer\">\n          <button className=\"gridDisplayButton\" onClick={() => this.toggleDisplay()}><i className=\"fas fa-grip-horizontal\"></i></button>\n          <h3>{`${this.completedCalculation()}% Reading Completed!`}</h3>\n        </div>\n        {\n          this.state.gridDisplay\n            ? this.renderGridDisplay()\n            : this.renderCarousel(numOfBooks)\n        }\n      </Fragment>\n    )\n  }\n\n  renderGridDisplay = () => {\n    return(\n      <section className=\"gridDisplay\">\n        <div className=\"bookShelfDisplay\">\n          {\n            this.state.savedBooks.map((book) => {\n              const bookImageUrl = book[0].bookImg;\n              const altText = `Book cover for ${book[0].title}`;\n              const key = book[2];\n              const bookTitle = book[0].title;\n              return (\n                <div className=\"displayedBook\">\n                  <Link to={`/mybookshelf/${bookTitle}`}>\n                    <img src={bookImageUrl} alt={altText} />\n                  </Link>\n                  <button onClick={() => this.handleRemoveBook(key)} className='removeBook'>Remove</button>\n                </div>\n              )\n            })\n          }\n        </div>\n      </section>\n    )\n  }\n\n  renderCarousel = (numOfBooks) => {\n    // Check if the number of books to display exceeds the number of saved books; if so, then set the number of books to display to equal the number of saved books\n    if (numOfBooks > this.state.savedBooks.length) {\n      numOfBooks = this.state.savedBooks.length;\n    }\n    // If the number of books to display is even, make it odd by take 1 away so the carousel display is balanced\n    if (numOfBooks % 2 === 0) {\n      numOfBooks -= 1;\n    }\n    // Set the start index of the books on the carousel display\n    let startIndex = this.state.indexOfDisplayedBook - Math.floor(numOfBooks / 2);\n    // Push the books to display into the displayArray\n    let displayArray = [];\n    for (let i = 0; i < numOfBooks; i++) {\n      startIndex = this.indexLoop(startIndex);\n      displayArray.push(this.state.savedBooks[startIndex]);\n      startIndex++;\n    }\n    // Find the firebase ID of the displayed book; to be passed as a parameter into the handleRemoveBook function\n    const firebaseIdOfDisplayedBook = this.state.savedBooks[this.state.indexOfDisplayedBook][2];\n    return(\n      <section className=\"carousel\">\n        <div className=\"bookShelfDisplay\">\n          <i className=\"fas fa-chevron-left\" onClick={() => this.handleClick(-1)}></i>\n          {\n            displayArray.map((book, index) => {\n              let className = '';\n              if (index === Math.floor(numOfBooks / 2)) {\n                className = 'displayedBook';\n              } else {\n                className = 'shelvedBooks';\n              }\n              const bookImageUrl = book[0].bookImg;\n              const altText = `Book cover for ${book[0].title}`;\n              const key = book[2];\n              const bookTitle = book[0].title;\n              return this.displayBook(key, className, bookImageUrl, altText, bookTitle);\n            })\n          }\n          <i className=\"fas fa-chevron-right\" onClick={() => this.handleClick(1)}></i>\n        </div>\n        <button onClick={() => this.handleRemoveBook(firebaseIdOfDisplayedBook)} className='removeBook'>Remove</button>\n      </section>\n    )\n  }\n\n  renderErrorMessage = () => {\n    return (\n      <h2 className=\"bookshelfEmptyMessage\">No saved books yet!</h2>\n    )\n  }\n\n  completedCalculation = () => {\n    let completedBook = 0;\n    this.state.savedBooks.forEach((book) => {\n      if (\n        book[1]\n      )\n      {completedBook++}\n    })\n    let completionPercentage = (completedBook * 100) / this.state.savedBooks.length;\n    completionPercentage = Math.ceil(completionPercentage);\n    return completionPercentage; \n  }\n\n  getNumOfBooksToDisplayOnCarousel = () => {\n    if (this.state.windowInnerWidth > 1250) {\n      return 9;\n    } else if (this.state.windowInnerWidth > 900) {\n      return 5;\n    } else if (this.state.windowInnerWidth > 800) {\n      return 3;\n    } else {\n      return 1;\n    }\n  }\n\n\n  render() {\n    let className;\n    this.state.gridDisplay ? className = 'gridBookshelf' : className = \"carouselBookshelf\";\n    return (\n      <div className={className}>\n        {\n          this.state.savedBooks.length\n            ? this.renderBookDisplay(this.getNumOfBooksToDisplayOnCarousel())\n            : this.renderErrorMessage()\n        }\n      </div>\n    )\n  }\n}\n\nexport default Bookshelf;","import { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\n\nclass BookDetails extends Component {\n    constructor() {\n        super();\n        this.dbRef = firebase.database().ref();\n        this.state = {\n            bookToDisplay: {},\n            firebaseIdOfDisplayedBook: '',\n            removed: false,\n            completed: false,\n            saved: false\n        }\n    }\n\n    componentDidMount() {\n        this.getDataFromFirebase();\n    }\n\n    componentWillUnmount() {\n        this.dbRef.off();\n    }\n\n    getDataFromFirebase = () => {\n        this.dbRef.on('value', (data) => {\n            const firebaseDataObj = data.val();\n            for (let key in firebaseDataObj) {\n                if (firebaseDataObj[key].book) {\n                    const bookTitle = firebaseDataObj[key].book.title;\n                    if (bookTitle === this.props.match.params.book) {\n                        const bookObj = firebaseDataObj[key].book;\n                        this.setState({\n                            bookToDisplay: bookObj,\n                            firebaseIdOfDisplayedBook: key,\n                            completed: firebaseDataObj[key].completed,\n                            saved: firebaseDataObj[key].saved\n                        })\n                    }\n                } else {\n                    this.dbRef.child(key).remove();\n                }\n                if (!firebaseDataObj[key].saved) {\n                    this.dbRef.child(key).remove();\n                }\n            }\n        });\n    }\n\n    handleRemoveBook = (bookId) => {\n        this.dbRef.child(bookId).remove();\n        this.setState({\n            removed: true,\n            saved: false\n        })\n    }\n\n    handleAddBook = (bookObject) => {\n        const bookAndCompleted = {\n            book: bookObject,\n            completed: false,\n            saved: true\n        }\n        this.dbRef.push(bookAndCompleted);\n        this.setState({\n            removed: false\n        })\n    }\n\n    renderButton = () => {\n        return(\n            this.state.removed || !this.state.saved\n                ? <button onClick={() => this.handleAddBook(this.state.bookToDisplay)} className='addBook'>Add to bookshelf</button>\n                : <button onClick={() => this.handleRemoveBook(this.state.firebaseIdOfDisplayedBook)} className='removeBook'>Remove book</button>\n        )\n    }\n\n    renderCheckbox = () => {\n        return(\n            this.state.saved\n                ?   <div className=\"checkbox\">\n                        <i className=\"fas fa-award\"></i>\n                        <input checked={this.state.completed} onChange={() => this.handleCheckbox()} type=\"checkbox\" name=\"completed\" id=\"completed\"/>\n                        <label htmlFor=\"completed\">Completed Reading</label>\n                    </div>\n                :   null\n        )\n    }\n\n    renderExitButton = () => {\n        return(\n            this.state.saved\n                ? <Link to=\"/mybookshelf\">\n                    <button className=\"exitButton\"><i className=\"fas fa-times-circle\"></i></button>\n                  </Link>\n                : <Link to={`/search/${this.state.bookToDisplay.searchInput}`}>\n                    <button className=\"exitButton\"><i className=\"fas fa-times-circle\"></i></button>\n                  </Link>\n        )\n    }\n\n    renderInformation = (book) => {\n        return (\n            <div className=\"detailsFlexContainer container\">\n                {\n                    this.renderExitButton()\n                }\n                <div className=\"imageContainer\">\n                    <img src={book.bookImg} alt={`Book cover for ${book.title}`} />\n                </div>\n                <div className=\"description\">\n                    <h2 className=\"bold\">{book.title}</h2>\n                    \n                    <h3>By: <span>{book.authors}</span>  | Genre: <span>{book.category}</span></h3>\n                    <h4><i className=\"fas fa-star\"></i> : <span>{book.rating}</span></h4>\n                    <h4>Published by: <span>{book.publisher}</span> on: <span>{book.publishedDate}</span></h4>\n                    <h4 className=\"lastRow \">Page count:<span>{book.pageCount}</span> | Language: <span>{book.language}</span></h4>\n                    <h4><span>{book.description}</span></h4>\n\n                </div>\n                {\n                    this.renderButton()\n                }\n                {\n                    this.renderCheckbox()\n                }\n            </div>\n        );\n    }\n\n    handleCheckbox = () => {\n        this.setState({\n            completed: !this.state.completed\n        })\n    }\n    \n    componentDidUpdate() {\n        this.dbRef.child(this.state.firebaseIdOfDisplayedBook).update({completed: this.state.completed});\n    }\n\n    render() {\n        return(\n            this.renderInformation(this.state.bookToDisplay)\n        )\n    }\n}\n\nexport default BookDetails;","import { Component } from 'react';\n\nclass Footer extends Component {\n    render() {\n        return(\n            <footer>\n                <p><a href=\"www.junocollege.com\">Juno College of Technology &copy;2020</a></p>\n            </footer>\n        )\n    }\n}\n\nexport default Footer;","import './App.css';\nimport { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport SearchResults from './SearchResults';\nimport LandingPage from './LandingPage';\nimport HeaderNav from './HeaderNav';\nimport Bookshelf from './Bookshelf';\nimport BookDetails from './BookDetails';\nimport Footer from './Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <HeaderNav />\n          <Route exact path=\"/book-club-reads/\" component={LandingPage} />\n          <Route exact path=\"/search/:search\" component={SearchResults}/>\n          {/* <Route path=\"/search/:search/:page\" component={SearchResults}/> */}\n          <Route exact path=\"/mybookshelf\" component={Bookshelf} />\n          <Route path=\"/mybookshelf/:book\" component={BookDetails} />\n          <Route path=\"/moredetails/:book\" component={BookDetails}/>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}