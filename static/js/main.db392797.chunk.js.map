{"version":3,"sources":["assets/noCover.jpg","firebase.js","SearchResults.js","LandingPage.js","HeaderNav.js","Bookshelf.js","BookDetails.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","SearchResults","apiCall","input","axios","url","method","responseType","params","q","maxResults","startIndex","state","orderBy","then","results","data","items","forEach","book","books","push","createBookObj","setState","catch","error","console","log","bookObj","id","title","handleMissingInfoError","volumeInfo","authors","category","categories","rating","averageRating","bookImg","handleMissingCoverImage","pageCount","publisher","language","description","publishedDate","searchInput","newSearch","handleButtonClick","bookObject","saved","bookAndCompleted","completed","dbRef","info","message","parseBookInfo","length","parsedInfo","value","index","imageLinks","thumbnail","noCover","handleLongInfo","maxLength","charAt","positionOfNextSpace","slice","search","numOfCharsToEndOfString","renderInformation","className","style","src","alt","to","onClick","renderNoResultMessage","handleNextPage","newStartIndex","next","pageNumber","handlePreviousPage","renderPaginationButtons","database","ref","maxStartIndexOfDisplayedResults","this","props","match","displayedResults","map","Component","LandingPage","href","HeaderNav","suggestedTitles","suggestions","updateUserInput","e","userSearch","target","newInput","userInput","handleSubmit","preventDefault","handleOnClickSubmit","handleSuggestionDropDown","renderNav","renderForm","onSubmit","onChange","event","getSuggestion","htmlFor","autoComplete","type","name","placeholder","suggestion","renderSuggestion","titleSuggestion","onKeyPress","Bookshelf","updateFirebase","on","firebaseBookObj","val","bookArray","bookKey","eachBook","finishedReading","savedBooks","addWindowEventListener","window","addEventListener","windowInnerWidth","innerWidth","handleRemoveBook","bookId","child","remove","indexOfDisplayedBook","handleClick","change","newIndex","indexLoop","displayBook","key","bookImageUrl","altText","bookTitle","createLink","callbackHtml","toggleDisplay","gridDisplay","renderBookDisplay","numOfBooks","completedCalculation","renderGridDisplay","renderCarousel","Math","floor","displayArray","i","firebaseIdOfDisplayedBook","aria-label","renderErrorMessage","completedBook","completionPercentage","ceil","getNumOfBooksToDisplayOnCarousel","off","BookDetails","getDataFromFirebase","firebaseDataObj","bookToDisplay","removed","handleAddBook","renderButton","renderCheckbox","checked","handleCheckbox","renderExitButton","update","Footer","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db392797.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noCover.fea3d7c6.jpg\";","import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA87pRApsH2HcpcixtBcOGe4gsRqyIwQ2s\",\r\n    authDomain: \"project-6-507f3.firebaseapp.com\",\r\n    projectId: \"project-6-507f3\",\r\n    storageBucket: \"project-6-507f3.appspot.com\",\r\n    messagingSenderId: \"418153390359\",\r\n    appId: \"1:418153390359:web:fdacdd374f5353ad9d9752\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n    export default firebase;","import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport noCover from './assets/noCover.jpg';\r\nimport firebase from './firebase.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SearchResults extends Component {\r\n  constructor() {\r\n    super();\r\n    this.newSearch = '';\r\n    this.dbRef = firebase.database().ref();\r\n    this.books = [];\r\n    this.maxStartIndexOfDisplayedResults = 0;\r\n    this.state = {\r\n      books: [],\r\n      startIndex: 0,\r\n      next: false,\r\n      pageNumber: 1\r\n    }\r\n  }\r\n\r\n  apiCall = (input) => {\r\n    axios({\r\n      url: 'https://www.googleapis.com/books/v1/volumes',\r\n      method: 'GET',\r\n      responseType: 'json',\r\n      params: {\r\n        q: input,\r\n        maxResults: 12,\r\n        startIndex: this.state.startIndex,\r\n        orderBy: 'relevance'\r\n      }\r\n    }).then((results) => {\r\n      const bookResults = results.data.items;\r\n      bookResults.forEach((book) => {\r\n        this.books.push(this.createBookObj(book));\r\n      });\r\n      this.setState({\r\n        books: this.books\r\n      });\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  createBookObj = (book) => {\r\n    const bookObj = {};\r\n    bookObj.id = book.id;\r\n    bookObj.title = this.handleMissingInfoError(book.volumeInfo.title, 'Unknown title');\r\n    bookObj.authors = this.handleMissingInfoError(book.volumeInfo.authors, 'Unknown author');\r\n    bookObj.category = this.handleMissingInfoError(book.volumeInfo.categories, 'Unknown genre');\r\n    bookObj.rating = this.handleMissingInfoError(book.volumeInfo.averageRating, 'No rating');\r\n    bookObj.bookImg = this.handleMissingCoverImage(book.volumeInfo); // add stock no image available \r\n    bookObj.pageCount = this.handleMissingInfoError(book.volumeInfo.pageCount, 'Unknown page count');\r\n    bookObj.publisher = this.handleMissingInfoError(book.volumeInfo.publisher, 'Unknown publisher');\r\n    bookObj.language = this.handleMissingInfoError(book.volumeInfo.language, 'Unknown language');\r\n    bookObj.description = this.handleMissingInfoError(book.volumeInfo.description, 'No description');\r\n    bookObj.publishedDate = this.handleMissingInfoError(book.volumeInfo.publishedDate, 'Unknown published date');\r\n    bookObj.searchInput = this.newSearch;\r\n    return bookObj;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.newSearch = this.props.match.params.search;\r\n    this.apiCall(this.props.match.params.search);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.newSearch !== this.props.match.params.search) {\r\n      this.newSearch = this.props.match.params.search;\r\n      this.books = [];\r\n      this.apiCall(this.newSearch);\r\n    }\r\n    if (this.state.next && this.state.startIndex > this.maxStartIndexOfDisplayedResults) {\r\n      if (this.state.startIndex > this.maxStartIndexOfDisplayedResults) {\r\n        this.maxStartIndexOfDisplayedResults = this.state.startIndex;\r\n      }\r\n      this.apiCall(this.newSearch);\r\n      this.setState({\r\n        next: false\r\n      })\r\n    }\r\n  }\r\n\r\n  handleButtonClick = (bookObject, saved) => {\r\n    const bookAndCompleted = {\r\n      book: bookObject,\r\n      completed: false,\r\n      saved: saved\r\n    }\r\n    this.dbRef.push(bookAndCompleted);\r\n  }\r\n\r\n  // Function to check if an info is missing. If so, display the corresponding message\r\n  handleMissingInfoError = (info, message) => {\r\n    let checkedInfo;\r\n    if (info) {\r\n      checkedInfo = this.parseBookInfo(info);\r\n    } else {\r\n      checkedInfo = message;\r\n    }\r\n    return checkedInfo;\r\n  }\r\n  // In case of multiple pieces of information, separate each with a comma, and add the word 'and' before the last one\r\n  parseBookInfo = (info) => {\r\n    if (typeof info === 'object') {\r\n      if (info.length === 1) {\r\n        return info;\r\n      } else if (info.length === 2) {\r\n        return `${info[0]} and ${info[1]}`;\r\n      } else if (info.length > 2) {\r\n        let parsedInfo = '';\r\n        info.forEach((value, index) => {\r\n          if (index === info.length - 1) {\r\n            parsedInfo += `and ${value}`;\r\n          } else {\r\n            parsedInfo += `${value}, `;\r\n          }\r\n        });\r\n        return parsedInfo;\r\n      }\r\n    } else {\r\n      return info;\r\n    }\r\n  }\r\n  // If the cover image is missing, display no-cover image\r\n  handleMissingCoverImage = (info) => {\r\n    if (info.imageLinks) {\r\n      return info.imageLinks.thumbnail;\r\n    } else {\r\n      return noCover;\r\n    }\r\n  }\r\n  handleLongInfo = (info, maxLength) => {\r\n    if (info.length > maxLength) {\r\n      if (info.charAt(maxLength - 1) !== ' ') {\r\n        const omittedInfo = info.slice(maxLength, info.length);\r\n        let positionOfNextSpace = omittedInfo.search(' ');\r\n        if (positionOfNextSpace < 0) {\r\n          const numOfCharsToEndOfString = info.length - maxLength;\r\n          if (numOfCharsToEndOfString < 10) {\r\n            positionOfNextSpace = numOfCharsToEndOfString;\r\n          }\r\n        }\r\n        maxLength += positionOfNextSpace;\r\n      }\r\n      info = info.slice(0, maxLength);\r\n      info += ' ...';\r\n    }\r\n    return info;\r\n  }\r\n\r\n  // Render relevant information on screen\r\n  renderInformation = (book) => {\r\n    return (\r\n      <div className=\"result-box\" key={book.id} style={{ \"backgroundImage\": `url(${book.bookImg})` }}>\r\n        <img src={book.bookImg} alt={`Book cover for ${this.handleLongInfo(book.title, 40)}`} />\r\n        <div className=\"descriptionContainer\">\r\n          <h2 className=\"title\">{this.handleLongInfo(book.title, 50)}</h2>\r\n          <h3>By: {book.authors}</h3>\r\n          <h3>Genre: {book.category}</h3>\r\n          <h4>Rating: {book.rating}</h4>\r\n        </div>\r\n        <div className=\"buttonContainer\">\r\n          <Link to={`/moredetails/${book.title}`}>\r\n            <button  className=\"detailsBtn\" onClick={() => { this.handleButtonClick(book, false) }}><i className='fas fa-info-circle'></i>  More Details</button>\r\n          </Link>\r\n          <button className=\"addBtn\" onClick={() => { this.handleButtonClick(book, true) }}><i className='fas fa-plus'></i>  Add to my bookshelf</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // In case API call returns no results, render the following error message\r\n  renderNoResultMessage = () => {\r\n    return (\r\n      <h2>No Results Found :(</h2>\r\n    )\r\n  }\r\n\r\n  handleNextPage = () => {\r\n    let newStartIndex = this.state.startIndex + 12;\r\n    this.setState({\r\n      startIndex: newStartIndex,\r\n      next: true,\r\n      pageNumber: this.state.pageNumber + 1\r\n    })\r\n  }\r\n\r\n  handlePreviousPage = () => {\r\n    let newStartIndex = this.state.startIndex - 12;\r\n    if (newStartIndex < 0) {\r\n      newStartIndex = 0;\r\n    }\r\n    this.setState({\r\n      startIndex: newStartIndex,\r\n      pageNumber: this.state.pageNumber - 1\r\n    })\r\n  }\r\n\r\n  renderPaginationButtons = () => {\r\n    return (\r\n      <div className=\"paginationButtonContainer\">\r\n        <button onClick={this.handlePreviousPage}>Previous results</button>\r\n        <button onClick={this.handleNextPage}>More results</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const displayedResults = this.state.books.slice(this.state.startIndex, this.state.startIndex + 12);\r\n    return (\r\n      <div>\r\n\r\n        <section className=\"searchResSection\">\r\n          {\r\n            displayedResults\r\n              ? displayedResults.map((book) => this.renderInformation(book))\r\n              : this.renderNoResultMessage()\r\n          }\r\n        </section>\r\n        {\r\n          this.renderPaginationButtons()\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SearchResults;","import { Component } from 'react';\r\n\r\nclass LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"landingPage\">\r\n        <h2 className=\"wrapperContainer\">Create the reading list of your dreams and track your progress!</h2>\r\n        <div className=\"iconContainer\">\r\n          <a href=\"#\"><i className=\"fab fa-twitter\"></i></a>\r\n          <a href=\"#\"><i className=\"fab fa-instagram\"></i></a>\r\n          <a href=\"#\"><i className=\"fab fa-linkedin\"></i></a>\r\n          <a href=\"#\"><i className=\"fab fa-facebook-square\"></i></a>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LandingPage;","import { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass HeaderNav extends Component {\r\n  constructor() {\r\n    super();\r\n    this.newInput = false;\r\n    this.state = {\r\n      suggestions: [],\r\n      userInput: ''\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      userInput: ''\r\n    })\r\n  }\r\n  apiCall = (input) => {\r\n    axios({\r\n      url: 'https://www.googleapis.com/books/v1/volumes',\r\n      method: 'GET',\r\n      responseType: 'json',\r\n      params: {\r\n        q: input,\r\n        maxResults: 5,\r\n        startIndex: 0,\r\n        orderBy: 'relevance'\r\n      }\r\n    }).then((results) => {\r\n      const bookResults = results.data.items;\r\n      const suggestedTitles = bookResults.map((book) => {\r\n        return book.volumeInfo.title;\r\n      })\r\n      this.setState({\r\n        suggestions: suggestedTitles\r\n      });\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.newInput) {\r\n      this.apiCall(this.state.userInput);\r\n      this.newInput = false;\r\n    }\r\n  }\r\n  updateUserInput = (e) => {\r\n    const userSearch = e.target.value;\r\n    if (userSearch) {\r\n      this.newInput = true;\r\n    }\r\n    this.setState({\r\n      userInput: userSearch\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  handleOnClickSubmit = () => {\r\n    this.setState({\r\n      userInput: ''\r\n    })\r\n  }\r\n\r\n  handleSuggestionDropDown = () => {\r\n    this.setState({\r\n      userInput: ''\r\n    })\r\n  }\r\n\r\n  renderNav = () => {\r\n    return (\r\n      <nav>\r\n        <ul className=\"headerNav\">\r\n          <li><Link to=\"/\" className=\"navLinks\">Browse</Link></li>\r\n          <li><Link to=\"/mybookshelf\" className=\"navLinks\">My Bookshelf</Link></li>\r\n        </ul>\r\n      </nav>\r\n    )\r\n  }\r\n  renderForm = () => {\r\n    return (\r\n      <div className=\"titleFormContainer\">\r\n        <Link to=\"/\" className=\"logo\">\r\n          <h1><i className=\"fas fa-book-open bookIcon\"></i><span className=\"capitalB\">B</span>ook Club Reads</h1>\r\n        </Link>\r\n        <form onSubmit={(e) => this.handleSubmit(e)} onChange={(event) => this.getSuggestion(event)}>\r\n          <label htmlFor=\"searchBook\" className=\"srOnly\">Search </label>\r\n          <input autoComplete=\"off\" type='text' id='searchbook' name='searchbook' className='searchBook' placeholder='title, author, genre' value={this.state.userInput} onChange={this.updateUserInput}></input>\r\n          <div className=\"suggestionContainer\">\r\n            {\r\n              this.state.userInput\r\n                ? this.state.suggestions.map((suggestion, index) => {\r\n                  return this.renderSuggestion(suggestion, index);\r\n                })\r\n                : null\r\n            }\r\n          </div>\r\n          <Link to={`/search/${this.state.userInput}`}>\r\n            <button className='searchButton' onClick={() => { this.handleOnClickSubmit() }}><i className=\"fas fa-search\"></i></button>\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n  renderSuggestion = (titleSuggestion, index) => {\r\n    titleSuggestion = this.handleLongInfo(titleSuggestion, 25);\r\n\r\n    return (\r\n      <div key={index} className=\"individualSuggestion\" >\r\n        <Link className=\"dropDownLink\" to={`/search/${titleSuggestion}`} onKeyPress={(e) => this.handleSuggestionDropDown(e)}>\r\n          <p onClick={(e) => this.handleSuggestionDropDown(e)} >{titleSuggestion}</p>\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n  getSuggestion = (event) => {\r\n    const suggestion = event.target.value;\r\n    this.setState({\r\n      userInput: suggestion\r\n    })\r\n  }\r\n  handleLongInfo = (info, maxLength) => {\r\n    if (info.length > maxLength) {\r\n      if (info.charAt(maxLength - 1) !== ' ') {\r\n        const omittedInfo = info.slice(maxLength, info.length);\r\n        let positionOfNextSpace = omittedInfo.search(' ');\r\n        if (positionOfNextSpace < 0) {\r\n          const numOfCharsToEndOfString = info.length - maxLength;\r\n          if (numOfCharsToEndOfString < 10) {\r\n            positionOfNextSpace = numOfCharsToEndOfString;\r\n          }\r\n        }\r\n        maxLength += positionOfNextSpace;\r\n      }\r\n      info = info.slice(0, maxLength);\r\n      info += ' ...';\r\n    }\r\n    return info;\r\n  }\r\n  render() {\r\n    return (\r\n      <header>\r\n        <div className=\"flexContainer container\">\r\n          {\r\n            this.renderForm()\r\n          }\r\n          {\r\n            this.renderNav()\r\n          }\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HeaderNav;","import { Component, Fragment } from 'react';\r\nimport firebase from './firebase.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Bookshelf extends Component {\r\n  constructor() {\r\n    super();\r\n    this.dbRef = firebase.database().ref();\r\n    this.state = {\r\n      savedBooks: [],\r\n      windowInnerWidth: 900,\r\n      indexOfDisplayedBook: 0,\r\n      gridDisplay: false\r\n    }\r\n  }\r\n\r\n  updateFirebase = () => {\r\n    this.dbRef.on('value', (data) => {\r\n      const firebaseBookObj = data.val();\r\n      const bookArray = [];\r\n      for (let bookKey in firebaseBookObj) {\r\n        const eachBook = firebaseBookObj[bookKey].book;\r\n        const finishedReading = firebaseBookObj[bookKey].completed;\r\n        const saved = firebaseBookObj[bookKey].saved;\r\n        if (saved) {\r\n          bookArray.push([eachBook, finishedReading, bookKey]);\r\n        }\r\n      }\r\n      this.setState({\r\n        savedBooks: bookArray\r\n      })\r\n    });\r\n  }\r\n\r\n  addWindowEventListener = () => {\r\n    window.addEventListener('resize', () => {\r\n      this.setState({\r\n        windowInnerWidth: window.innerWidth\r\n      })\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateFirebase();\r\n    this.addWindowEventListener();\r\n    this.setState({\r\n      windowInnerWidth: window.innerWidth\r\n    })\r\n  }\r\n\r\n  handleRemoveBook = (bookId) => {\r\n    this.dbRef.child(bookId).remove();\r\n    // Error handling when the index of displayed book is greater than the max index of saveBooks array\r\n    if (this.state.indexOfDisplayedBook >= this.state.savedBooks.length - 1) {\r\n      this.setState({\r\n        indexOfDisplayedBook: this.state.indexOfDisplayedBook - 1\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.dbRef.off();\r\n  }\r\n\r\n  handleClick = (change) => {\r\n    let newIndex = this.state.indexOfDisplayedBook + change;\r\n    newIndex = this.indexLoop(newIndex);\r\n    this.setState({\r\n      indexOfDisplayedBook: newIndex\r\n    })\r\n  }\r\n\r\n  // Create infinite loop for the carousel display  \r\n  indexLoop = (index) => {\r\n    if (index < 0) {\r\n      // if the index is less than 0, then set it to max index minus the value of the index itself; '+' is used in the code because index is negative  \r\n      index = this.state.savedBooks.length + index;\r\n    } else if (index > this.state.savedBooks.length - 1) {\r\n      // if the index is more than max index, then set it to be the difference between itself and the length of the array\r\n      index = index - this.state.savedBooks.length;\r\n    }\r\n    return index;\r\n  }\r\n\r\n  // Function to display individual books  \r\n  displayBook = (key, className, bookImageUrl, altText, bookTitle) => {\r\n    return (\r\n      <div key={key} className={className}>\r\n        {\r\n          className === 'displayedBook'\r\n            ? this.createLink(bookTitle, () => <img src={bookImageUrl} alt={altText} />)\r\n            : <img src={bookImageUrl} alt={altText} />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  createLink = (bookTitle, callbackHtml) => {\r\n    return (\r\n      <Link to={`/mybookshelf/${bookTitle}`}>\r\n        {\r\n          callbackHtml()\r\n        }\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  toggleDisplay = () => {\r\n    this.setState({\r\n      gridDisplay: !this.state.gridDisplay\r\n    })\r\n  }\r\n\r\n  // Render the books on the screen\r\n  renderBookDisplay = (numOfBooks) => {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"dashboardContainer\">\r\n          <button className=\"gridDisplayButton\" onClick={() => this.toggleDisplay()}><i className=\"fas fa-grip-horizontal\"></i></button>\r\n          <h3>{`${this.completedCalculation()}% Reading Completed!`}</h3>\r\n        </div>\r\n        {\r\n          this.state.gridDisplay\r\n            ? this.renderGridDisplay()\r\n            : this.renderCarousel(numOfBooks)\r\n        }\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  renderGridDisplay = () => {\r\n    return (\r\n      <section className=\"gridDisplay\">\r\n        <div className=\"bookShelfDisplay\">\r\n          {\r\n            this.state.savedBooks.map((book) => {\r\n              const bookImageUrl = book[0].bookImg;\r\n              const altText = `Book cover for ${book[0].title}`;\r\n              const key = book[2];\r\n              const bookTitle = book[0].title;\r\n              return (\r\n                <div className=\"displayedBook\">\r\n                  <Link to={`/mybookshelf/${bookTitle}`}>\r\n                    <img src={bookImageUrl} alt={altText} />\r\n                  </Link>\r\n                  <button onClick={() => this.handleRemoveBook(key)} className='removeBook'>Remove</button>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  renderCarousel = (numOfBooks) => {\r\n    // Check if the number of books to display exceeds the number of saved books; if so, then set the number of books to display to equal the number of saved books\r\n    if (numOfBooks > this.state.savedBooks.length) {\r\n      numOfBooks = this.state.savedBooks.length;\r\n    }\r\n    // If the number of books to display is even, make it odd by take 1 away so the carousel display is balanced\r\n    if (numOfBooks % 2 === 0) {\r\n      numOfBooks -= 1;\r\n    }\r\n    // Set the start index of the books on the carousel display\r\n    let startIndex = this.state.indexOfDisplayedBook - Math.floor(numOfBooks / 2);\r\n    // Push the books to display into the displayArray\r\n    let displayArray = [];\r\n    for (let i = 0; i < numOfBooks; i++) {\r\n      startIndex = this.indexLoop(startIndex);\r\n      displayArray.push(this.state.savedBooks[startIndex]);\r\n      startIndex++;\r\n    }\r\n    // Find the firebase ID of the displayed book; to be passed as a parameter into the handleRemoveBook function\r\n    const firebaseIdOfDisplayedBook = this.state.savedBooks[this.state.indexOfDisplayedBook][2];\r\n    return (\r\n      <section className=\"carousel\">\r\n        <div className=\"bookShelfDisplay\">\r\n          <button className=\"chevronButton\" aria-label=\"display next books in bookshelf\"><i className=\"fas fa-chevron-left\" onClick={() => this.handleClick(-1)}></i></button>\r\n          {\r\n            displayArray.map((book, index) => {\r\n              let className = '';\r\n              if (index === Math.floor(numOfBooks / 2)) {\r\n                className = 'displayedBook';\r\n              } else {\r\n                className = 'shelvedBooks';\r\n              }\r\n              const bookImageUrl = book[0].bookImg;\r\n              const altText = `Book cover for ${book[0].title}`;\r\n              const key = book[2];\r\n              const bookTitle = book[0].title;\r\n              return this.displayBook(key, className, bookImageUrl, altText, bookTitle);\r\n            })\r\n          }\r\n          <button className=\"chevronButton\" aria-label=\"display previous books in bookshelf\"><i className=\"fas fa-chevron-right\" onClick={() => this.handleClick(1)}></i></button>\r\n        </div>\r\n        <button onClick={() => this.handleRemoveBook(firebaseIdOfDisplayedBook)} className='removeBook'>Remove</button>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  renderErrorMessage = () => {\r\n    return (\r\n      <h2 className=\"bookshelfEmptyMessage\">No saved books yet!</h2>\r\n    )\r\n  }\r\n\r\n  completedCalculation = () => {\r\n    let completedBook = 0;\r\n    this.state.savedBooks.forEach((book) => {\r\n      if (\r\n        book[1]\r\n      ) { completedBook++ }\r\n    })\r\n    let completionPercentage = (completedBook * 100) / this.state.savedBooks.length;\r\n    completionPercentage = Math.ceil(completionPercentage);\r\n    return completionPercentage;\r\n  }\r\n\r\n  getNumOfBooksToDisplayOnCarousel = () => {\r\n    if (this.state.windowInnerWidth > 1250) {\r\n      return 9;\r\n    } else if (this.state.windowInnerWidth > 900) {\r\n      return 5;\r\n    } else if (this.state.windowInnerWidth > 800) {\r\n      return 3;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    let className;\r\n    this.state.gridDisplay ? className = 'gridBookshelf' : className = \"carouselBookshelf\";\r\n    return (\r\n      <div className={className}>\r\n        {\r\n          this.state.savedBooks.length\r\n            ? this.renderBookDisplay(this.getNumOfBooksToDisplayOnCarousel())\r\n            : this.renderErrorMessage()\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Bookshelf;","import { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\n\r\nclass BookDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.dbRef = firebase.database().ref();\r\n    this.state = {\r\n      bookToDisplay: {},\r\n      firebaseIdOfDisplayedBook: '',\r\n      removed: false,\r\n      completed: false,\r\n      saved: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataFromFirebase();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.dbRef.off();\r\n  }\r\n\r\n  getDataFromFirebase = () => {\r\n    this.dbRef.on('value', (data) => {\r\n      const firebaseDataObj = data.val();\r\n      for (let key in firebaseDataObj) {\r\n        if (firebaseDataObj[key].book) {\r\n          const bookTitle = firebaseDataObj[key].book.title;\r\n          if (bookTitle === this.props.match.params.book) {\r\n            const bookObj = firebaseDataObj[key].book;\r\n            this.setState({\r\n              bookToDisplay: bookObj,\r\n              firebaseIdOfDisplayedBook: key,\r\n              completed: firebaseDataObj[key].completed,\r\n              saved: firebaseDataObj[key].saved\r\n            })\r\n          }\r\n        } else {\r\n          this.dbRef.child(key).remove();\r\n        }\r\n        if (!firebaseDataObj[key].saved) {\r\n          this.dbRef.child(key).remove();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  handleRemoveBook = (bookId) => {\r\n    this.dbRef.child(bookId).remove();\r\n    this.setState({\r\n      removed: true,\r\n      saved: false\r\n    })\r\n  }\r\n\r\n  handleAddBook = (bookObject) => {\r\n    const bookAndCompleted = {\r\n      book: bookObject,\r\n      completed: false,\r\n      saved: true\r\n    }\r\n    this.dbRef.push(bookAndCompleted);\r\n    this.setState({\r\n      removed: false\r\n    })\r\n  }\r\n\r\n  renderButton = () => {\r\n    return (\r\n      this.state.removed || !this.state.saved\r\n        ? <button onClick={() => this.handleAddBook(this.state.bookToDisplay)} className='addBook'>Add to bookshelf</button>\r\n        : <button onClick={() => this.handleRemoveBook(this.state.firebaseIdOfDisplayedBook)} className='removeBook'>Remove book</button>\r\n    )\r\n  }\r\n\r\n  renderCheckbox = () => {\r\n    return (\r\n      this.state.saved\r\n        ? <div className=\"checkbox\">\r\n          <input checked={this.state.completed} onChange={() => this.handleCheckbox()} type=\"checkbox\" name=\"completed\" id=\"completed\" />\r\n          <label htmlFor=\"completed\">Finished Reading</label>\r\n        </div>\r\n        : null\r\n    )\r\n  }\r\n\r\n  renderExitButton = () => {\r\n    return (\r\n      this.state.saved\r\n        ? <Link to=\"/mybookshelf\">\r\n          <button className=\"exitButton\" aria-label=\"return to previous screen\"><i className=\"fas fa-times-circle\"></i></button>\r\n        </Link>\r\n        : <Link to={`/search/${this.state.bookToDisplay.searchInput}`}>\r\n          <button className=\"exitButton\" aria-label=\"return to previous screen\"><i className=\"fas fa-times-circle\"></i></button>\r\n        </Link>\r\n    )\r\n  }\r\n\r\n  renderInformation = (book) => {\r\n    return (\r\n      <div className=\"detailsFlexContainer container\">\r\n        {\r\n          this.renderExitButton()\r\n        }\r\n        <div className=\"imageContainer\">\r\n          <img src={book.bookImg} alt={`Book cover for ${book.title}`} />\r\n        </div>\r\n        <div className=\"description\">\r\n          <h2 className=\"bold\">{book.title}</h2>\r\n\r\n          <h3>By: <span>{book.authors}</span>  | Genre: <span>{book.category}</span></h3>\r\n          <h4><i className=\"fas fa-star\"></i> : <span>{book.rating}</span></h4>\r\n          <h4>Published by: <span>{book.publisher}</span> on: <span>{book.publishedDate}</span></h4>\r\n          <h4 className=\"lastRow \">Page count:<span>{book.pageCount}</span> | Language: <span>{book.language}</span></h4>\r\n          <h4><span>{book.description}</span></h4>\r\n\r\n        </div>\r\n        {\r\n          this.renderButton()\r\n        }\r\n        {\r\n          this.renderCheckbox()\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleCheckbox = () => {\r\n    this.setState({\r\n      completed: !this.state.completed\r\n    })\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.dbRef.child(this.state.firebaseIdOfDisplayedBook).update({ completed: this.state.completed });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.renderInformation(this.state.bookToDisplay)\r\n    )\r\n  }\r\n}\r\n\r\nexport default BookDetails;","import { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return(\r\n            <footer>\r\n                <p className=\"container\"><a href=\"www.junocollege.com\">Juno College of Technology &copy;2020</a></p>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import './App.css';\r\nimport { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport SearchResults from './SearchResults';\r\nimport LandingPage from './LandingPage';\r\nimport HeaderNav from './HeaderNav';\r\nimport Bookshelf from './Bookshelf';\r\nimport BookDetails from './BookDetails';\r\nimport Footer from './Footer';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <HeaderNav />\r\n          <Route exact path=\"/\" component={LandingPage} />\r\n          <Route exact path=\"/search/:search\" component={SearchResults} />\r\n          {/* <Route path=\"/search/:search/:page\" component={SearchResults}/> */}\r\n          <Route exact path=\"/mybookshelf\" component={Bookshelf} />\r\n          <Route path=\"/mybookshelf/:book\" component={BookDetails} />\r\n          <Route path=\"/moredetails/:book\" component={BookDetails} />\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}