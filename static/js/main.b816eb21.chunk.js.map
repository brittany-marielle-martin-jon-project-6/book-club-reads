{"version":3,"sources":["assets/noCover.jpg","firebase.js","SearchResults.js","LandingPage.js","languages.js","HeaderNav.js","Bookshelf.js","BookDetails.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","SearchResults","apiCall","input","noResults","axios","url","method","responseType","params","q","maxResults","startIndex","state","orderBy","then","results","bookResults","data","items","forEach","book","books","push","createBookObj","setState","catch","error","console","log","bookObj","id","title","handleMissingInfoError","volumeInfo","authors","category","categories","rating","averageRating","bookImg","handleMissingCoverImage","pageCount","publisher","language","description","publishedDate","searchInput","newSearch","handleButtonClick","bookObject","saved","bookAndCompleted","completed","dbRef","info","message","parseBookInfo","length","parsedInfo","value","index","imageLinks","thumbnail","noCover","handleLongInfo","maxLength","charAt","positionOfNextSpace","slice","search","numOfCharsToEndOfString","renderInformation","className","style","src","alt","props","by","genre","to","onClick","moreDetails","add","renderNoResultMessage","handleNextPage","newStartIndex","next","pageNumber","handlePreviousPage","renderPaginationButtons","previous","database","ref","maxStartIndexOfDisplayedResults","this","match","displayedResults","map","Component","LandingPage","tagline","href","english","symbol","placeholder","browse","myBookshelf","remove","removeBook","published","readingCompleted","finishedReading","juno","fran√ßais","HeaderNav","toggleLanguage","renderLanguageButtons","aria-label","suggestedTitles","suggestions","updateUserInput","e","userSearch","target","newInput","userInput","handleSubmit","preventDefault","handleOnClickSubmit","handleSuggestionDropDown","renderNav","renderForm","onSubmit","onChange","event","getSuggestion","htmlFor","autoComplete","type","name","suggestion","renderSuggestion","titleSuggestion","onKeyPress","Bookshelf","getFirebaseData","on","firebaseBookObj","val","bookArray","bookKey","eachBook","savedBooks","resizeWindow","windowInnerWidth","window","innerWidth","addWindowEventListener","addEventListener","getNumOfBooksToDisplayOnCarousel","handleRemoveBook","bookId","child","indexOfDisplayedBook","handleBookshelfNav","change","newIndex","indexLoop","displayBook","key","bookImageUrl","altText","bookTitle","createLink","callbackHtml","toggleDisplay","gridDisplay","renderBookDisplay","numOfBooks","completedCalculation","renderGridDisplay","renderCarousel","buttonText","Math","floor","displayArray","i","firebaseIdOfDisplayedBook","renderErrorMessage","completedBook","completionPercentage","ceil","removeEventListener","off","BookDetails","getDataFromFirebase","firebaseDataObj","bookToDisplay","removed","handleAddBook","handleCheckbox","renderButton","renderCheckbox","checked","renderExitButton","update","Footer","App","getLanguage","basename","process","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b816eb21.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noCover.fea3d7c6.jpg\";","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA87pRApsH2HcpcixtBcOGe4gsRqyIwQ2s\",\n    authDomain: \"project-6-507f3.firebaseapp.com\",\n    projectId: \"project-6-507f3\",\n    storageBucket: \"project-6-507f3.appspot.com\",\n    messagingSenderId: \"418153390359\",\n    appId: \"1:418153390359:web:fdacdd374f5353ad9d9752\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n    export default firebase;","import { Component } from 'react';\nimport axios from 'axios';\nimport noCover from './assets/noCover.jpg';\nimport firebase from './firebase.js';\nimport { Link } from 'react-router-dom';\n\nclass SearchResults extends Component {\n  constructor() {\n    super();\n    this.noResults = false;\n    this.newSearch = '';\n    this.dbRef = firebase.database().ref();\n    this.books = [];\n    this.maxStartIndexOfDisplayedResults = 0;\n    this.state = {\n      books: [],\n      startIndex: 0,\n      next: false,\n      pageNumber: 1\n    }\n  }\n\n  apiCall = (input) => {\n    this.noResults = false;\n    axios({\n      url: 'https://www.googleapis.com/books/v1/volumes',\n      method: 'GET',\n      responseType: 'json',\n      params: {\n        q: input,\n        maxResults: 12,\n        startIndex: this.state.startIndex,\n        orderBy: 'relevance'\n      }\n    }).then((results) => {\n      const bookResults = results.data.items;\n      if (bookResults) {\n        bookResults.forEach((book) => {\n          this.books.push(this.createBookObj(book));\n        });\n      } else {\n        this.noResults = true;\n      }\n      this.setState({\n        books: this.books\n      });\n    }).catch((error) => {\n      console.log(error);\n    })\n  }\n\n  createBookObj = (book) => {\n      const bookObj = {};\n      bookObj.id = book.id;\n      bookObj.title = this.handleMissingInfoError(book.volumeInfo.title, 'Unknown title');\n      bookObj.authors = this.handleMissingInfoError(book.volumeInfo.authors, 'Unknown author');\n      bookObj.category = this.handleMissingInfoError(book.volumeInfo.categories, 'Unknown genre');\n      bookObj.rating = this.handleMissingInfoError(book.volumeInfo.averageRating, 'No rating');\n      bookObj.bookImg = this.handleMissingCoverImage(book.volumeInfo); // add stock no image available \n      bookObj.pageCount = this.handleMissingInfoError(book.volumeInfo.pageCount, 'Unknown page count');\n      bookObj.publisher = this.handleMissingInfoError(book.volumeInfo.publisher, 'Unknown publisher');\n      bookObj.language = this.handleMissingInfoError(book.volumeInfo.language, 'Unknown language');\n      bookObj.description = this.handleMissingInfoError(book.volumeInfo.description, 'No description');\n      bookObj.publishedDate = this.handleMissingInfoError(book.volumeInfo.publishedDate, 'Unknown published date');\n      bookObj.searchInput = this.newSearch;\n      return bookObj;\n  }\n\n  componentDidMount() {\n    this.newSearch = this.props.match.params.search;\n    this.apiCall(this.props.match.params.search);\n  }\n\n  // Check if a new search is entered; if so, clear global book array and make new API call\n  componentDidUpdate() {\n    if (this.newSearch !== this.props.match.params.search) {\n      this.newSearch = this.props.match.params.search;\n      this.books = [];\n      this.apiCall(this.newSearch);\n    }\n    // Keep track of the global book array size and only make API calls when the search index exceeds the size of the global array\n    if (this.state.next && this.state.startIndex > this.maxStartIndexOfDisplayedResults) {\n      if (this.state.startIndex > this.maxStartIndexOfDisplayedResults) {\n        this.maxStartIndexOfDisplayedResults = this.state.startIndex;\n      }\n      this.apiCall(this.newSearch);\n      this.setState({\n        next: false\n      })\n    }\n  }\n\n  // push book data to firebase with 'saved' property being true to add to bookshelf\n  handleButtonClick = (bookObject, saved) => {\n    const bookAndCompleted = {\n      book: bookObject,\n      completed: false,\n      saved: saved\n    }\n    this.dbRef.push(bookAndCompleted);\n  }\n\n  // Function to check if an info is missing. If so, display the corresponding message\n  handleMissingInfoError = (info, message) => {\n    let checkedInfo;\n    if (info) {\n      checkedInfo = this.parseBookInfo(info);\n    } else {\n      checkedInfo = message;\n    }\n    return checkedInfo;\n  }\n  // In case of multiple pieces of information, separate each with a comma, and add the word 'and' before the last one\n  parseBookInfo = (info) => {\n    if (typeof info === 'object') {\n      if (info.length === 1) {\n        return info;\n      } else if (info.length === 2) {\n        return `${info[0]} and ${info[1]}`;\n      } else if (info.length > 2) {\n        let parsedInfo = '';\n        info.forEach((value, index) => {\n          if (index === info.length - 1) {\n            parsedInfo += `and ${value}`;\n          } else {\n            parsedInfo += `${value}, `;\n          }\n        });\n        return parsedInfo;\n      }\n    } else {\n      return info;\n    }\n  }\n  // If the cover image is missing, display no-cover image\n  handleMissingCoverImage = (info) => {\n    if (info.imageLinks) {\n      return info.imageLinks.thumbnail;\n    } else {\n      return noCover;\n    }\n  }\n  handleLongInfo = (info, maxLength) => {\n    if (info.length > maxLength) {\n      if (info.charAt(maxLength - 1) !== ' ') {\n        const omittedInfo = info.slice(maxLength, info.length);\n        let positionOfNextSpace = omittedInfo.search(' ');\n        if (positionOfNextSpace < 0) {\n          const numOfCharsToEndOfString = info.length - maxLength;\n          if (numOfCharsToEndOfString < 10) {\n            positionOfNextSpace = numOfCharsToEndOfString;\n          }\n        }\n        maxLength += positionOfNextSpace;\n      }\n      info = info.slice(0, maxLength);\n      info += ' ...';\n    }\n    return info;\n  }\n\n  // Render relevant information on screen\n  renderInformation = (book) => {\n    return (\n      <div className=\"resultBox\" key={book.id} style={{\"backgroundImage\": `url(${book.bookImg})`}}>\n        <img src={book.bookImg} alt={`Book cover for ${this.handleLongInfo(book.title, 40)}`} />\n        <div className=\"descriptionContainer\">\n          <h2 className=\"title\">{this.handleLongInfo(book.title, 50)}</h2>\n          <h3>{this.props.language.by} {book.authors}</h3>\n          <h3>{this.props.language.genre} {book.category}</h3>\n          <h4>{this.props.language.rating} {book.rating}</h4>\n        </div>\n        <div className=\"buttonContainer\">\n          <Link to={`/moredetails/${book.title}`}>\n            <button onClick={() => { this.handleButtonClick(book, false) }}><i className='fas fa-info-circle'></i>  {this.props.language.moreDetails}</button>\n          </Link>\n          <button onClick={() => { this.handleButtonClick(book, true) }}><i className='fas fa-plus'></i>  {this.props.language.add}</button>\n        </div>\n      </div>\n    );\n  }\n\n  // In case API call returns no results, render the following error message\n  renderNoResultMessage = () => {\n    return (\n      <h2>No Results Found :(</h2>\n    )\n  }\n\n  handleNextPage = () => {\n    let newStartIndex = this.state.startIndex + 12;\n    this.setState({\n      startIndex: newStartIndex,\n      next: true,\n      pageNumber: this.state.pageNumber + 1\n    })\n  }\n\n  handlePreviousPage = () => {\n    let newStartIndex = this.state.startIndex - 12;\n    if (newStartIndex < 0) {\n      newStartIndex = 0;\n    }\n    this.setState({\n      startIndex: newStartIndex,\n      pageNumber: this.state.pageNumber - 1\n    })\n  }\n\n  renderPaginationButtons = () => {\n    return(\n      <div className=\"paginationButtonContainer\">\n        <button onClick={this.handlePreviousPage}>{this.props.language.previous}</button>\n        <button onClick={this.handleNextPage}>{this.props.language.next}</button>\n      </div>\n    )\n  }\n\n  render() {\n    const displayedResults = this.state.books.slice(this.state.startIndex, this.state.startIndex + 12);\n    return (\n      <div>\n        <section className=\"searchResSection\">\n          {\n            !this.noResults\n              ? displayedResults.map((book) => this.renderInformation(book))\n              : this.renderNoResultMessage()\n          }\n        </section>\n        {\n          !this.noResults\n            ? this.renderPaginationButtons()\n            : null\n        }\n      </div>\n    )\n  }\n}\n\n\nexport default SearchResults;","import { Component } from 'react';\n\nclass LandingPage extends Component {\n  render() {\n    return (\n      <div className=\"landingPage\">\n        <h2 className=\"wrapperContainer\">{this.props.language.tagline}</h2>\n        <div className=\"iconContainer\">\n          <a href=\"#\"><i className=\"fab fa-twitter\"></i></a>\n          <a href=\"#\"><i className=\"fab fa-instagram\"></i></a>\n          <a href=\"#\"><i className=\"fab fa-linkedin\"></i></a>\n          <a href=\"#\"><i className=\"fab fa-facebook-square\"></i></a>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LandingPage;","const english = {\n    symbol: \"en\",\n    tagline: \"Create the reading list of your dreams and track your progress!\",\n    placeholder: \"title, author, genre\",\n    browse: \"browse\",\n    myBookshelf: \"my bookshelf\",\n    remove: \"remove\",\n    removeBook: \"remove book\",\n    add: \"Add to bookshelf\",\n    by: \"By:\",\n    rating: \"Rating:\",\n    genre: \"Genre:\",\n    published: \"Publised by:\",\n    pageCount: \"Page count\",\n    language: \"Language:\",\n    completed: \"Completed\",\n    readingCompleted: \"Reading completed\",\n    finishedReading: \"Finished Reading\",\n    moreDetails: \"More details\",\n    next: \"Next\",\n    previous: \"Previous\",\n    juno: \"Juno College of Technology\"\n}\n\nconst fran√ßais = {\n    symbol: \"fr\",\n    tagline: \"Cr√©ez la biblioth√®que de vos r√™ves et suivez vos progr√®s!\",\n    placeholder: \"titre, auteur(e), genre\",\n    browse: \"rechercher\",\n    myBookshelf: \"ma biblioth√®que\",\n    remove: \"supprimer\",\n    removeBook: \"supprimer\",\n    add: \"Ajouter\",\n    by: \"Par:\",\n    rating: \"√âvaluation:\",\n    genre: \"Genre:\",\n    published: \"Publi√© par:\",\n    pageCount: \"Nombre de pages\",\n    language: \"Langue:\",\n    completed: \"Compl√™t\",\n    readingCompleted: \"Compl√™t\",\n    finishedReading: \"Termin√©\",\n    moreDetails: \"Plus de d√©tails\",\n    next: \"Page suivante\",\n    previous: \"Page pr√©c√©dente\",\n    juno: \"Juno L'√âcole de Technologie\"\n}\n\nexport { english, fran√ßais };","import { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { english, fran√ßais } from './languages';\n\nclass HeaderNav extends Component {\n  constructor() {\n    super();\n    this.newInput = false;\n    this.state = {\n      suggestions: [],\n      userInput: '',\n      language: english\n    }\n  }\n\n  // LANGUAGE PLUGIN\n  toggleLanguage = (language) => {\n    this.props.language(language)\n    this.setState({\n      language: language\n    });\n  }\n  renderLanguageButtons = () => {\n    return (\n      <div className=\"languageContainer\">\n        <button aria-label=\"choose english language\" onClick={() => this.toggleLanguage(english)}>EN</button>\n\n        <button aria-label=\"choisir la langue fran√ßaise\" onClick={() => this.toggleLanguage(fran√ßais)}>FR</button>\n      </div>\n    )\n  }\n\n  // LIFE CYCLE METHOD\n  componentDidMount() {\n    this.setState({\n        userInput: ''\n      })\n  }\n  \n  componentDidUpdate() {\n    if (this.newInput) {\n      this.apiCall(this.state.userInput);\n      this.newInput = false;\n    }\n  }\n  apiCall = (input) => {\n    axios({\n      url: 'https://www.googleapis.com/books/v1/volumes',\n      method: 'GET',\n      responseType: 'json',\n      params: {\n        q: input,\n        maxResults: 5,\n        startIndex: 0,\n        orderBy: 'relevance'\n      }\n    }).then((results) => {\n      const bookResults = results.data.items;\n      const suggestedTitles = bookResults.map((book) => {\n        return book.volumeInfo.title;\n      })\n      this.setState({\n        suggestions: suggestedTitles\n      });\n    }).catch((error) => {\n      console.log(error);\n    })\n  }\n\n  // Check for user's new character input for autosuggestion\n  updateUserInput = (e) => {\n    const userSearch = e.target.value;\n    if (userSearch) {\n      this.newInput = true;\n    }\n    this.setState({\n      userInput: userSearch\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n  }\n\n  // On submit button being clicked, remove user's input from state\n  handleOnClickSubmit = () => {\n    this.setState({\n      userInput: ''\n    })\n  }\n\n  // On a suggestion being selected, remove user's input from state\n  handleSuggestionDropDown = () => {\n    this.setState({\n      userInput: ''\n    })\n  }\n\n  renderNav = () => {\n    return (\n      <nav>\n        <ul className=\"headerNav\">\n          <li><Link to=\"/\" className=\"navLinks\">{this.state.language.browse}</Link></li>\n          <li><Link to=\"/mybookshelf\" className=\"navLinks\">{this.state.language.myBookshelf}</Link></li>\n        </ul>\n      </nav>\n    )\n  }\n  renderForm = () => {\n    return (\n      <div className=\"titleFormContainer\">\n        <Link to=\"/\" className=\"logo\">\n          <h1><i className=\"fas fa-book-open bookIcon\"></i><span className=\"capitalB\">B</span>ook Club Reads</h1>\n        </Link>\n        <form onSubmit={(e) => this.handleSubmit(e)} onChange={(event) => this.getSuggestion(event)}>\n          <label htmlFor=\"searchBook\" className=\"srOnly\">Search </label>\n          <input autoComplete=\"off\" type='text' id='searchbook' name='searchbook' className='searchBook' placeholder={this.state.language.placeholder} value={this.state.userInput} onChange={this.updateUserInput}></input>\n          <div className=\"suggestionContainer\">\n            {\n              this.state.userInput\n                ? this.state.suggestions.map((suggestion, index) => {\n                  return this.renderSuggestion(suggestion, index);\n                })\n                : null\n            }\n          </div>\n          <Link to={`/search/${this.state.userInput}`}>\n            <button className='searchButton' onClick={() => { this.handleOnClickSubmit() }}><i className=\"fas fa-search\"></i></button>\n          </Link>\n        </form>\n      </div>\n    )\n  }\n  renderSuggestion = (titleSuggestion, index) => {\n    titleSuggestion = this.handleLongInfo(titleSuggestion, 25);\n    return (\n      <div key={index} className=\"individualSuggestion\" >\n        <Link className=\"dropDownLink\" to={`/search/${titleSuggestion}`} onKeyPress={(e) => this.handleSuggestionDropDown(e)}>\n          <p onClick={(e) => this.handleSuggestionDropDown(e)} >{titleSuggestion}</p>\n        </Link>\n      </div>\n    )\n  }\n  getSuggestion = (event) => {\n    const suggestion = event.target.value;\n    this.setState({\n      userInput: suggestion\n    })\n  }\n\n  // Error handling function to check for and truncate long strings;\n  handleLongInfo = (info, maxLength) => {\n    if (info.length > maxLength) {\n      if (info.charAt(maxLength - 1) !== ' ') {\n        const omittedInfo = info.slice(maxLength, info.length);\n        let positionOfNextSpace = omittedInfo.search(' ');\n        if (positionOfNextSpace < 0) {\n          const numOfCharsToEndOfString = info.length - maxLength;\n          if (numOfCharsToEndOfString < 10) {\n            positionOfNextSpace = numOfCharsToEndOfString;\n          }\n        }\n        maxLength += positionOfNextSpace;\n      }\n      info = info.slice(0, maxLength);\n      info += ' ...';\n    }\n    return info;\n  }\n  render() {\n    return (\n      <header>\n        <div className=\"flexContainer container\">\n          {\n            this.renderForm()\n          }\n          {\n            this.renderNav()\n          }\n          {\n            this.renderLanguageButtons()\n          }\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default HeaderNav;","import { Component, Fragment } from 'react';\nimport firebase from './firebase.js';\nimport { Link } from 'react-router-dom';\n\nclass Bookshelf extends Component {\n  constructor() {\n    super();\n    this.dbRef = firebase.database().ref();\n    this.state = {\n      savedBooks: [],\n      windowInnerWidth: 900,\n      indexOfDisplayedBook: 0,\n      gridDisplay: false\n    }\n  }\n\n\n  componentDidMount() {\n    this.getFirebaseData();\n    this.addWindowEventListener();\n    this.setState({\n      windowInnerWidth: window.innerWidth\n    })\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resizeWindow);\n    this.dbRef.off();\n  }\n\n  getFirebaseData = () => {\n    this.dbRef.on('value', (data) => {\n      const firebaseBookObj = data.val();\n      const bookArray = [];\n      for (let bookKey in firebaseBookObj) {\n        const eachBook = firebaseBookObj[bookKey].book;\n        const finishedReading = firebaseBookObj[bookKey].completed;\n        const saved = firebaseBookObj[bookKey].saved;\n        if (saved) {\n          bookArray.push([eachBook, finishedReading, bookKey]);\n        }\n      }\n      this.setState({\n        savedBooks: bookArray\n      })\n    });\n  }\n\n  resizeWindow = () => {\n    this.setState({\n      windowInnerWidth: window.innerWidth\n    })\n  }\n\n  // Add event listener to window resizes\n  addWindowEventListener = () => {\n    this.resizeWindow();\n    window.addEventListener('resize', this.resizeWindow);\n  }\n\n  getNumOfBooksToDisplayOnCarousel = () => {\n    if (this.state.windowInnerWidth > 1250) {\n      return 9;\n    } else if (this.state.windowInnerWidth > 900) {\n      return 5;\n    } else if (this.state.windowInnerWidth > 800) {\n      return 3;\n    } else {\n      return 1;\n    }\n  }\n\n  handleRemoveBook = (bookId) => {\n    this.dbRef.child(bookId).remove();\n    // Error handling when the index of displayed book is greater than the max index of saveBooks array\n    if (this.state.indexOfDisplayedBook >= this.state.savedBooks.length - 1) {\n      this.setState({\n        indexOfDisplayedBook: this.state.indexOfDisplayedBook - 1\n      })\n    }\n  }\n\n  // Function to move navigate bookshelf display\n  handleBookshelfNav = (change) => {\n    let newIndex = this.state.indexOfDisplayedBook + change;\n    newIndex = this.indexLoop(newIndex);\n    this.setState({\n      indexOfDisplayedBook: newIndex\n    })\n  }\n\n  // Create infinite loop for the carousel display  \n  indexLoop = (index) => {\n    if (index < 0) {\n      // if the index is less than 0, then set it to max index minus the value of the index itself; '+' is used in the code because index is negative  \n      index = this.state.savedBooks.length + index;\n    } else if (index > this.state.savedBooks.length - 1) {\n      // if the index is more than max index, then set it to be the difference between itself and the length of the array\n      index = index - this.state.savedBooks.length;\n    }\n    return index;\n  }\n\n  // Function to display individual books  \n  displayBook = (key, className, bookImageUrl, altText, bookTitle) => {\n    return (\n      <div key={key} className={className}>\n        {\n          className === 'displayedBook'\n            ? this.createLink(bookTitle, () => <img src={bookImageUrl} alt={altText} />)\n            : <img src={bookImageUrl} alt={altText} />\n        }\n      </div>\n    )\n  }\n\n  // Create link for each book\n  createLink = (bookTitle, callbackHtml) => {\n    return (\n      <Link to={`/mybookshelf/${bookTitle}`}>\n        {\n          callbackHtml()\n        }\n      </Link>\n    )\n  }\n\n  // Toggle between grid and carousel display\n  toggleDisplay = () => {\n    this.setState({\n      gridDisplay: !this.state.gridDisplay\n    })\n  }\n\n  // Render the books on the screen\n  renderBookDisplay = (numOfBooks) => {\n    return (\n      <Fragment>\n        <div className=\"dashboardContainer\">\n          <button className=\"gridDisplayButton\" onClick={() => this.toggleDisplay()}><i className=\"fas fa-grip-horizontal\"></i></button>\n          <h3>{`${this.completedCalculation()}% ${this.props.language.readingCompleted}!`}</h3>\n        </div>\n        {\n          this.state.gridDisplay\n            ? this.renderGridDisplay()\n            : this.renderCarousel(numOfBooks)\n        }\n      </Fragment>\n    )\n  }\n\n  renderGridDisplay = () => {\n    const buttonText = this.props.language.remove;\n    return (\n      <section className=\"gridDisplay\">\n        <div className=\"bookShelfDisplay\">\n          {\n            this.state.savedBooks.map((book) => {\n              const bookImageUrl = book[0].bookImg;\n              const altText = `Book cover for ${book[0].title}`;\n              const key = book[2];\n              const bookTitle = book[0].title;\n              \n              return (\n                <div key={key} className=\"displayedBook\">\n                  <Link to={`/mybookshelf/${bookTitle}`}>\n                    <img src={bookImageUrl} alt={altText} />\n                  </Link>\n                  <button onClick={() => this.handleRemoveBook(key)} className='removeBook'>{buttonText}</button>\n                </div>\n              )\n            })\n          }\n        </div>\n      </section>\n    )\n  }\n\n  renderCarousel = (numOfBooks) => {\n    // Check if the number of books to display exceeds the number of saved books; if so, then set the number of books to display to equal the number of saved books\n    if (numOfBooks > this.state.savedBooks.length) {\n      numOfBooks = this.state.savedBooks.length;\n    }\n    // If the number of books to display is even, make it odd by take 1 away so the carousel display is balanced\n    if (numOfBooks % 2 === 0) {\n      numOfBooks -= 1;\n    }\n    // Set the start index of the books on the carousel display\n    let startIndex = this.state.indexOfDisplayedBook - Math.floor(numOfBooks / 2);\n    // Push the books to display into the displayArray\n    let displayArray = [];\n    for (let i = 0; i < numOfBooks; i++) {\n      startIndex = this.indexLoop(startIndex);\n      displayArray.push(this.state.savedBooks[startIndex]);\n      startIndex++;\n    }\n    // Find the firebase ID of the displayed book; to be passed as a parameter into the handleRemoveBook function\n    const firebaseIdOfDisplayedBook = this.state.savedBooks[this.state.indexOfDisplayedBook][2];\n    const buttonText = this.props.language.remove;\n    return (\n      <section className=\"carousel\">\n        <div className=\"bookShelfDisplay\">\n          <button className=\"chevronButton\" aria-label=\"display next books in bookshelf\"><i className=\"fas fa-chevron-left\" onClick={() => this.handleBookshelfNav(-1)}></i></button>\n          {\n            displayArray.map((book, index) => {\n              let className = '';\n              if (index === Math.floor(numOfBooks / 2)) {\n                className = 'displayedBook';\n              } else {\n                className = 'shelvedBooks';\n              }\n              const bookImageUrl = book[0].bookImg;\n              const altText = `Book cover for ${book[0].title}`;\n              const key = book[2];\n              const bookTitle = book[0].title;\n              return this.displayBook(key, className, bookImageUrl, altText, bookTitle);\n            })\n          }\n          {\n        \n          }\n          <button className=\"chevronButton\" aria-label=\"display previous books in bookshelf\"><i className=\"fas fa-chevron-right\" onClick={() => this.handleBookshelfNav(1)}></i></button>\n        </div>\n        <button onClick={() => this.handleRemoveBook(firebaseIdOfDisplayedBook)} className='removeBook'>{buttonText}</button>\n      </section>\n    )\n  }\n\n  renderErrorMessage = () => {\n    return (\n      <h2 className=\"bookshelfEmptyMessage\">No saved books yet!</h2>\n    )\n  }\n\n  completedCalculation = () => {\n    let completedBook = 0;\n    this.state.savedBooks.forEach((book) => {\n      if (\n        book[1]\n      ) { completedBook++ }\n    })\n    let completionPercentage = (completedBook * 100) / this.state.savedBooks.length;\n    completionPercentage = Math.ceil(completionPercentage);\n    return completionPercentage;\n  }\n\n  render() {\n    let className;\n    this.state.gridDisplay ? className = 'gridBookshelf' : className = \"carouselBookshelf\";\n    return (\n      <div className={className}>\n        {\n          this.state.savedBooks.length\n            ? this.renderBookDisplay(this.getNumOfBooksToDisplayOnCarousel())\n            : this.renderErrorMessage()\n        }\n      </div>\n    )\n  }\n}\n\nexport default Bookshelf;","import { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\n\nclass BookDetails extends Component {\n  constructor() {\n    super();\n    this.dbRef = firebase.database().ref();\n    this.state = {\n      bookToDisplay: {},\n      firebaseIdOfDisplayedBook: '',\n      removed: false,\n      completed: false,\n      saved: false\n    }\n  }\n\n  componentDidMount() {\n    this.getDataFromFirebase();\n  }\n\n  //Update firebase to match current state\n  componentDidUpdate() {\n    this.dbRef.child(this.state.firebaseIdOfDisplayedBook).update({ completed: this.state.completed });\n  }\n\n  // Turn off dbRef\n  componentWillUnmount() {\n    this.dbRef.off();\n  }\n\n  // Get Date from firebase and save to states; check if the user has added a book to the bookshelf; if not, remove the temp book info from firebase\n  getDataFromFirebase = () => {\n    this.dbRef.on('value', (data) => {\n      const firebaseDataObj = data.val();\n      for (let key in firebaseDataObj) {\n        if (firebaseDataObj[key].book) {\n          const bookTitle = firebaseDataObj[key].book.title;\n          if (bookTitle === this.props.match.params.book) {\n            const bookObj = firebaseDataObj[key].book;\n            this.setState({\n              bookToDisplay: bookObj,\n              firebaseIdOfDisplayedBook: key,\n              completed: firebaseDataObj[key].completed,\n              saved: firebaseDataObj[key].saved\n            })\n          }\n        } else {\n          this.dbRef.child(key).remove();\n        }\n        if (!firebaseDataObj[key].saved) {\n          this.dbRef.child(key).remove();\n        }\n      }\n    });\n  }\n\n  // Remove book info from firebase and reset states\n  handleRemoveBook = (bookId) => {\n    this.dbRef.child(bookId).remove();\n    this.setState({\n      removed: true,\n      saved: false\n    })\n  }\n\n  // add books to firebase and set states\n  handleAddBook = (bookObject) => {\n    const bookAndCompleted = {\n      book: bookObject,\n      completed: false,\n      saved: true\n    }\n    this.dbRef.push(bookAndCompleted);\n    this.setState({\n      removed: false\n    })\n  }\n\n  handleCheckbox = () => {\n    this.setState({\n      completed: !this.state.completed\n    })\n  }\n\n  renderButton = () => {\n    return (\n      this.state.removed || !this.state.saved\n      \n        ? <button onClick={() => this.handleAddBook(this.state.bookToDisplay)} className='addBook'>{this.props.language.add}</button>\n\n        : <button onClick={() => this.handleRemoveBook(this.state.firebaseIdOfDisplayedBook)} className='removeBook'>{this.props.language.removeBook}</button>\n    )\n  }\n\n  renderCheckbox = () => {\n    return (\n      this.state.saved\n        ? <div className=\"checkbox\">\n          <input checked={this.state.completed} onChange={() => this.handleCheckbox()} type=\"checkbox\" name=\"completed\" id=\"completed\" />\n          <label htmlFor=\"completed\">{this.props.language.finishedReading}</label>\n        </div>\n        : null\n    )\n  }\n\n  renderExitButton = () => {\n    return (\n      this.state.saved\n        ? <Link to=\"/mybookshelf\">\n          <button className=\"exitButton\" aria-label=\"return to previous screen\"><i className=\"fas fa-times-circle\"></i></button>\n        </Link>\n        : <Link to={`/search/${this.state.bookToDisplay.searchInput}`}>\n          <button className=\"exitButton\" aria-label=\"return to previous screen\"><i className=\"fas fa-times-circle\"></i></button>\n        </Link>\n    )\n  }\n\n  renderInformation = (book) => {\n    return (\n      <div className=\"detailsFlexContainer container\">\n        {\n          this.renderExitButton()\n        }\n        <div className=\"imageContainer\">\n          <img src={book.bookImg} alt={`Book cover for ${book.title}`} />\n        </div>\n        <div className=\"description\">\n          <h2 className=\"bold\">{book.title}</h2>\n\n          <h3>{this.props.language.by} <span>{book.authors}</span>  | {this.props.language.genre} <span>{book.category}</span></h3>\n\n          <h4><i className=\"fas fa-star\"></i> : <span>{book.rating}</span></h4>\n\n          <h4>{this.props.language.published} <span>{book.publisher}</span> - <span>{book.publishedDate}</span></h4>\n\n          <h4 className=\"lastRow \">{this.props.language.pageCount}:<span>{book.pageCount}</span> | {this.props.language.language} <span>{book.language}</span></h4>\n\n          <h4><span>{book.description}</span></h4>\n        </div>\n        {\n          this.renderButton()\n        }\n        {\n          this.renderCheckbox()\n        }\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      this.renderInformation(this.state.bookToDisplay)\n    )\n  }\n}\n\nexport default BookDetails;","import { Component } from 'react';\n\nclass Footer extends Component {\n    render() {\n        return(\n            <footer>\n                <p className=\"container\"><a href=\"www.junocollege.com\">{this.props.language.juno} &copy;2020</a></p>\n            </footer>\n        )\n    }\n}\n\nexport default Footer;","import './App.css';\nimport { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport SearchResults from './SearchResults';\nimport LandingPage from './LandingPage';\nimport HeaderNav from './HeaderNav';\nimport Bookshelf from './Bookshelf';\nimport BookDetails from './BookDetails';\nimport Footer from './Footer';\nimport { english } from './languages';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      language: english\n    }\n  }\n\n  getLanguage = (language) => {\n    this.setState({\n      language: language\n    })\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <HeaderNav language={(language) => this.getLanguage(language)}/>\n          <Route exact path=\"/\" render={() => {\n            return(\n              <LandingPage language={this.state.language}/>\n            )\n          }}/>\n          <Route path=\"/search/:search\" render={(props) => {\n            return(\n              <SearchResults {...props} language={this.state.language}/>\n            )\n          }}/>\n          <Route exact path=\"/mybookshelf\" render={() => {\n            return(\n              <Bookshelf language={this.state.language} />\n            )\n          }}/>\n          <Route path=\"/mybookshelf/:book\" render={(props) => {\n            return(\n              <BookDetails {...props} language={this.state.language}/>\n            )\n          }} />\n          <Route path=\"/moredetails/:book\" render={(props) => {\n            return(\n              <BookDetails {...props} language={this.state.language} />\n            )\n          }}/>\n          <Footer language={this.state.language}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}